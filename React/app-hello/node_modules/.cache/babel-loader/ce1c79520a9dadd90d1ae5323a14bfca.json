{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId]) {\n      /******/\n      return installedModules[moduleId].exports;\n      /******/\n    }\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n\n    var module = installedModules[moduleId] = {\n      /******/\n      i: moduleId,\n\n      /******/\n      l: false,\n\n      /******/\n      exports: {}\n      /******/\n\n    };\n    /******/\n\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.l = true;\n    /******/\n\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n\n  /******/\n\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n\n  /******/\n  // define getter function for harmony exports\n\n  /******/\n\n  __webpack_require__.d = function (exports, name, getter) {\n    /******/\n    if (!__webpack_require__.o(exports, name)) {\n      /******/\n      Object.defineProperty(exports, name, {\n        /******/\n        configurable: false,\n\n        /******/\n        enumerable: true,\n\n        /******/\n        get: getter\n        /******/\n\n      });\n      /******/\n    }\n    /******/\n\n  };\n  /******/\n\n  /******/\n  // getDefaultExport function for compatibility with non-harmony modules\n\n  /******/\n\n\n  __webpack_require__.n = function (module) {\n    /******/\n    var getter = module && module.__esModule ?\n    /******/\n    function getDefault() {\n      return module['default'];\n    } :\n    /******/\n    function getModuleExports() {\n      return module;\n    };\n    /******/\n\n    __webpack_require__.d(getter, 'a', getter);\n    /******/\n\n\n    return getter;\n    /******/\n  };\n  /******/\n\n  /******/\n  // Object.prototype.hasOwnProperty.call\n\n  /******/\n\n\n  __webpack_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  /******/\n\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n\n  __webpack_require__.p = \"\";\n  /******/\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(__webpack_require__.s = 10);\n  /******/\n}(\n/************************************************************************/\n\n/******/\n[\n/* 0 */\n\n/***/\nfunction (module, exports) {\n  module.exports = require(\"prop-types\");\n  /***/\n},\n/* 1 */\n\n/***/\nfunction (module, exports) {\n  module.exports = require(\"react\");\n  /***/\n},\n/* 2 */\n\n/***/\nfunction (module, exports) {\n  /*\n  \tMIT License http://www.opensource.org/licenses/mit-license.php\n  \tAuthor Tobias Koppers @sokra\n  */\n  // css base code, injected by the css-loader\n  module.exports = function (useSourceMap) {\n    var list = []; // return the list of modules as css string\n\n    list.toString = function toString() {\n      return this.map(function (item) {\n        var content = cssWithMappingToString(item, useSourceMap);\n\n        if (item[2]) {\n          return \"@media \" + item[2] + \"{\" + content + \"}\";\n        } else {\n          return content;\n        }\n      }).join(\"\");\n    }; // import a list of modules into the list\n\n\n    list.i = function (modules, mediaQuery) {\n      if (typeof modules === \"string\") modules = [[null, modules, \"\"]];\n      var alreadyImportedModules = {};\n\n      for (var i = 0; i < this.length; i++) {\n        var id = this[i][0];\n        if (typeof id === \"number\") alreadyImportedModules[id] = true;\n      }\n\n      for (i = 0; i < modules.length; i++) {\n        var item = modules[i]; // skip already imported module\n        // this implementation is not 100% perfect for weird media query combinations\n        //  when a module is imported multiple times with different media queries.\n        //  I hope this will never occur (Hey this way we have smaller bundles)\n\n        if (typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n          if (mediaQuery && !item[2]) {\n            item[2] = mediaQuery;\n          } else if (mediaQuery) {\n            item[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n          }\n\n          list.push(item);\n        }\n      }\n    };\n\n    return list;\n  };\n\n  function cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || '';\n    var cssMapping = item[3];\n\n    if (!cssMapping) {\n      return content;\n    }\n\n    if (useSourceMap && typeof btoa === 'function') {\n      var sourceMapping = toComment(cssMapping);\n      var sourceURLs = cssMapping.sources.map(function (source) {\n        return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n      });\n      return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n    }\n\n    return [content].join('\\n');\n  } // Adapted from convert-source-map (MIT)\n\n\n  function toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n    return '/*# ' + data + ' */';\n  }\n  /***/\n\n},\n/* 3 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /*\n  \tMIT License http://www.opensource.org/licenses/mit-license.php\n  \tAuthor Tobias Koppers @sokra\n  */\n  var stylesInDom = {};\n\n  var memoize = function memoize(fn) {\n    var memo;\n    return function () {\n      if (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n      return memo;\n    };\n  };\n\n  var isOldIE = memoize(function () {\n    // Test for IE <= 9 as proposed by Browserhacks\n    // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n    // Tests for existence of standard globals is to allow style-loader\n    // to operate correctly into non-standard environments\n    // @see https://github.com/webpack-contrib/style-loader/issues/177\n    return window && document && document.all && !window.atob;\n  });\n\n  var getElement = function (fn) {\n    var memo = {};\n    return function (selector) {\n      if (typeof memo[selector] === \"undefined\") {\n        var styleTarget = fn.call(this, selector); // Special case to return head of iframe instead of iframe itself\n\n        if (styleTarget instanceof window.HTMLIFrameElement) {\n          try {\n            // This will throw an exception if access to iframe is blocked\n            // due to cross-origin restrictions\n            styleTarget = styleTarget.contentDocument.head;\n          } catch (e) {\n            styleTarget = null;\n          }\n        }\n\n        memo[selector] = styleTarget;\n      }\n\n      return memo[selector];\n    };\n  }(function (target) {\n    return document.querySelector(target);\n  });\n\n  var singleton = null;\n  var singletonCounter = 0;\n  var stylesInsertedAtTop = [];\n\n  var fixUrls = __webpack_require__(18);\n\n  module.exports = function (list, options) {\n    if (typeof DEBUG !== \"undefined\" && DEBUG) {\n      if (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n    }\n\n    options = options || {};\n    options.attrs = typeof options.attrs === \"object\" ? options.attrs : {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n\n    if (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE(); // By default, add <style> tags to the <head> element\n\n    if (!options.insertInto) options.insertInto = \"head\"; // By default, add <style> tags to the bottom of the target\n\n    if (!options.insertAt) options.insertAt = \"bottom\";\n    var styles = listToStyles(list, options);\n    addStylesToDom(styles, options);\n    return function update(newList) {\n      var mayRemove = [];\n\n      for (var i = 0; i < styles.length; i++) {\n        var item = styles[i];\n        var domStyle = stylesInDom[item.id];\n        domStyle.refs--;\n        mayRemove.push(domStyle);\n      }\n\n      if (newList) {\n        var newStyles = listToStyles(newList, options);\n        addStylesToDom(newStyles, options);\n      }\n\n      for (var i = 0; i < mayRemove.length; i++) {\n        var domStyle = mayRemove[i];\n\n        if (domStyle.refs === 0) {\n          for (var j = 0; j < domStyle.parts.length; j++) {\n            domStyle.parts[j]();\n          }\n\n          delete stylesInDom[domStyle.id];\n        }\n      }\n    };\n  };\n\n  function addStylesToDom(styles, options) {\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i];\n      var domStyle = stylesInDom[item.id];\n\n      if (domStyle) {\n        domStyle.refs++;\n\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j](item.parts[j]);\n        }\n\n        for (; j < item.parts.length; j++) {\n          domStyle.parts.push(addStyle(item.parts[j], options));\n        }\n      } else {\n        var parts = [];\n\n        for (var j = 0; j < item.parts.length; j++) {\n          parts.push(addStyle(item.parts[j], options));\n        }\n\n        stylesInDom[item.id] = {\n          id: item.id,\n          refs: 1,\n          parts: parts\n        };\n      }\n    }\n  }\n\n  function listToStyles(list, options) {\n    var styles = [];\n    var newStyles = {};\n\n    for (var i = 0; i < list.length; i++) {\n      var item = list[i];\n      var id = options.base ? item[0] + options.base : item[0];\n      var css = item[1];\n      var media = item[2];\n      var sourceMap = item[3];\n      var part = {\n        css: css,\n        media: media,\n        sourceMap: sourceMap\n      };\n      if (!newStyles[id]) styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });else newStyles[id].parts.push(part);\n    }\n\n    return styles;\n  }\n\n  function insertStyleElement(options, style) {\n    var target = getElement(options.insertInto);\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n    }\n\n    var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n    if (options.insertAt === \"top\") {\n      if (!lastStyleElementInsertedAtTop) {\n        target.insertBefore(style, target.firstChild);\n      } else if (lastStyleElementInsertedAtTop.nextSibling) {\n        target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n      } else {\n        target.appendChild(style);\n      }\n\n      stylesInsertedAtTop.push(style);\n    } else if (options.insertAt === \"bottom\") {\n      target.appendChild(style);\n    } else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n      var nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n      target.insertBefore(style, nextSibling);\n    } else {\n      throw new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n    }\n  }\n\n  function removeStyleElement(style) {\n    if (style.parentNode === null) return false;\n    style.parentNode.removeChild(style);\n    var idx = stylesInsertedAtTop.indexOf(style);\n\n    if (idx >= 0) {\n      stylesInsertedAtTop.splice(idx, 1);\n    }\n  }\n\n  function createStyleElement(options) {\n    var style = document.createElement(\"style\");\n    options.attrs.type = \"text/css\";\n    addAttrs(style, options.attrs);\n    insertStyleElement(options, style);\n    return style;\n  }\n\n  function createLinkElement(options) {\n    var link = document.createElement(\"link\");\n    options.attrs.type = \"text/css\";\n    options.attrs.rel = \"stylesheet\";\n    addAttrs(link, options.attrs);\n    insertStyleElement(options, link);\n    return link;\n  }\n\n  function addAttrs(el, attrs) {\n    Object.keys(attrs).forEach(function (key) {\n      el.setAttribute(key, attrs[key]);\n    });\n  }\n\n  function addStyle(obj, options) {\n    var style, update, remove, result; // If a transform function was defined, run it on the css\n\n    if (options.transform && obj.css) {\n      result = options.transform(obj.css);\n\n      if (result) {\n        // If transform returns a value, use that instead of the original css.\n        // This allows running runtime transformations on the css.\n        obj.css = result;\n      } else {\n        // If the transform function returns a falsy value, don't add this css.\n        // This allows conditional loading of css\n        return function () {// noop\n        };\n      }\n    }\n\n    if (options.singleton) {\n      var styleIndex = singletonCounter++;\n      style = singleton || (singleton = createStyleElement(options));\n      update = applyToSingletonTag.bind(null, style, styleIndex, false);\n      remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else if (obj.sourceMap && typeof URL === \"function\" && typeof URL.createObjectURL === \"function\" && typeof URL.revokeObjectURL === \"function\" && typeof Blob === \"function\" && typeof btoa === \"function\") {\n      style = createLinkElement(options);\n      update = updateLink.bind(null, style, options);\n\n      remove = function remove() {\n        removeStyleElement(style);\n        if (style.href) URL.revokeObjectURL(style.href);\n      };\n    } else {\n      style = createStyleElement(options);\n      update = applyToTag.bind(null, style);\n\n      remove = function remove() {\n        removeStyleElement(style);\n      };\n    }\n\n    update(obj);\n    return function updateStyle(newObj) {\n      if (newObj) {\n        if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n          return;\n        }\n\n        update(obj = newObj);\n      } else {\n        remove();\n      }\n    };\n  }\n\n  var replaceText = function () {\n    var textStore = [];\n    return function (index, replacement) {\n      textStore[index] = replacement;\n      return textStore.filter(Boolean).join('\\n');\n    };\n  }();\n\n  function applyToSingletonTag(style, index, remove, obj) {\n    var css = remove ? \"\" : obj.css;\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = replaceText(index, css);\n    } else {\n      var cssNode = document.createTextNode(css);\n      var childNodes = style.childNodes;\n      if (childNodes[index]) style.removeChild(childNodes[index]);\n\n      if (childNodes.length) {\n        style.insertBefore(cssNode, childNodes[index]);\n      } else {\n        style.appendChild(cssNode);\n      }\n    }\n  }\n\n  function applyToTag(style, obj) {\n    var css = obj.css;\n    var media = obj.media;\n\n    if (media) {\n      style.setAttribute(\"media\", media);\n    }\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = css;\n    } else {\n      while (style.firstChild) {\n        style.removeChild(style.firstChild);\n      }\n\n      style.appendChild(document.createTextNode(css));\n    }\n  }\n\n  function updateLink(link, options, obj) {\n    var css = obj.css;\n    var sourceMap = obj.sourceMap;\n    /*\n    \tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n    \tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n    \ton by default.  Otherwise default to the convertToAbsoluteUrls option\n    \tdirectly\n    */\n\n    var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n    if (options.convertToAbsoluteUrls || autoFixUrls) {\n      css = fixUrls(css);\n    }\n\n    if (sourceMap) {\n      // http://stackoverflow.com/a/26603875\n      css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n\n    var blob = new Blob([css], {\n      type: \"text/css\"\n    });\n    var oldSrc = link.href;\n    link.href = URL.createObjectURL(blob);\n    if (oldSrc) URL.revokeObjectURL(oldSrc);\n  }\n  /***/\n\n},\n/* 4 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    ENTER: 13,\n    TAB: 9,\n    UP: 38,\n    DOWN: 40,\n    LEFT: 37,\n    RIGHT: 39,\n    ESC: 27\n  };\n  /***/\n},\n/* 5 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (global, module) {\n    /**\n    * lodash (Custom Build) <https://lodash.com/>\n    * Build: `lodash modularize exports=\"npm\" -o ./`\n    * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n    * Released under MIT license <https://lodash.com/license>\n    * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n    * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n    */\n\n    /** Used as the size to enable large array optimizations. */\n    var LARGE_ARRAY_SIZE = 200;\n    /** Used as the `TypeError` message for \"Functions\" methods. */\n\n    var FUNC_ERROR_TEXT = 'Expected a function';\n    /** Used to stand-in for `undefined` hash values. */\n\n    var HASH_UNDEFINED = '__lodash_hash_undefined__';\n    /** Used to compose bitmasks for comparison styles. */\n\n    var UNORDERED_COMPARE_FLAG = 1,\n        PARTIAL_COMPARE_FLAG = 2;\n    /** Used as references for various `Number` constants. */\n\n    var INFINITY = 1 / 0,\n        MAX_SAFE_INTEGER = 9007199254740991,\n        MAX_INTEGER = 1.7976931348623157e+308,\n        NAN = 0 / 0;\n    /** `Object#toString` result references. */\n\n    var argsTag = '[object Arguments]',\n        arrayTag = '[object Array]',\n        boolTag = '[object Boolean]',\n        dateTag = '[object Date]',\n        errorTag = '[object Error]',\n        funcTag = '[object Function]',\n        genTag = '[object GeneratorFunction]',\n        mapTag = '[object Map]',\n        numberTag = '[object Number]',\n        objectTag = '[object Object]',\n        promiseTag = '[object Promise]',\n        regexpTag = '[object RegExp]',\n        setTag = '[object Set]',\n        stringTag = '[object String]',\n        symbolTag = '[object Symbol]',\n        weakMapTag = '[object WeakMap]';\n    var arrayBufferTag = '[object ArrayBuffer]',\n        dataViewTag = '[object DataView]',\n        float32Tag = '[object Float32Array]',\n        float64Tag = '[object Float64Array]',\n        int8Tag = '[object Int8Array]',\n        int16Tag = '[object Int16Array]',\n        int32Tag = '[object Int32Array]',\n        uint8Tag = '[object Uint8Array]',\n        uint8ClampedTag = '[object Uint8ClampedArray]',\n        uint16Tag = '[object Uint16Array]',\n        uint32Tag = '[object Uint32Array]';\n    /** Used to match property names within property paths. */\n\n    var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n        reIsPlainProp = /^\\w*$/,\n        reLeadingDot = /^\\./,\n        rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n    /**\n     * Used to match `RegExp`\n     * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n     */\n\n    var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n    /** Used to match leading and trailing whitespace. */\n\n    var reTrim = /^\\s+|\\s+$/g;\n    /** Used to match backslashes in property paths. */\n\n    var reEscapeChar = /\\\\(\\\\)?/g;\n    /** Used to detect bad signed hexadecimal string values. */\n\n    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n    /** Used to detect binary string values. */\n\n    var reIsBinary = /^0b[01]+$/i;\n    /** Used to detect host constructors (Safari). */\n\n    var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n    /** Used to detect octal string values. */\n\n    var reIsOctal = /^0o[0-7]+$/i;\n    /** Used to detect unsigned integer values. */\n\n    var reIsUint = /^(?:0|[1-9]\\d*)$/;\n    /** Used to identify `toStringTag` values of typed arrays. */\n\n    var typedArrayTags = {};\n    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\n    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n    /** Built-in method references without a dependency on `root`. */\n\n    var freeParseInt = parseInt;\n    /** Detect free variable `global` from Node.js. */\n\n    var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n    /** Detect free variable `self`. */\n\n    var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n    /** Used as a reference to the global object. */\n\n    var root = freeGlobal || freeSelf || Function('return this')();\n    /** Detect free variable `exports`. */\n\n    var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n    /** Detect free variable `module`. */\n\n    var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n    /** Detect the popular CommonJS extension `module.exports`. */\n\n    var moduleExports = freeModule && freeModule.exports === freeExports;\n    /** Detect free variable `process` from Node.js. */\n\n    var freeProcess = moduleExports && freeGlobal.process;\n    /** Used to access faster Node.js helpers. */\n\n    var nodeUtil = function () {\n      try {\n        return freeProcess && freeProcess.binding('util');\n      } catch (e) {}\n    }();\n    /* Node.js helper references. */\n\n\n    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n    /**\n     * A specialized version of `_.some` for arrays without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} [array] The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array ? array.length : 0;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {number} fromIndex The index to search from.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n\n\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\n      var length = array.length,\n          index = fromIndex + (fromRight ? 1 : -1);\n\n      while (fromRight ? index-- : ++index < length) {\n        if (predicate(array[index], index, array)) {\n          return index;\n        }\n      }\n\n      return -1;\n    }\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n\n\n    function baseProperty(key) {\n      return function (object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n    /**\n     * The base implementation of `_.times` without support for iteratee shorthands\n     * or max array length checks.\n     *\n     * @private\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     */\n\n\n    function baseTimes(n, iteratee) {\n      var index = -1,\n          result = Array(n);\n\n      while (++index < n) {\n        result[index] = iteratee(index);\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.unary` without support for storing metadata.\n     *\n     * @private\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     */\n\n\n    function baseUnary(func) {\n      return function (value) {\n        return func(value);\n      };\n    }\n    /**\n     * Gets the value at `key` of `object`.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n\n\n    function getValue(object, key) {\n      return object == null ? undefined : object[key];\n    }\n    /**\n     * Checks if `value` is a host object in IE < 9.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n     */\n\n\n    function isHostObject(value) {\n      // Many host objects are `Object` objects that can coerce to strings\n      // despite having improperly defined `toString` methods.\n      var result = false;\n\n      if (value != null && typeof value.toString != 'function') {\n        try {\n          result = !!(value + '');\n        } catch (e) {}\n      }\n\n      return result;\n    }\n    /**\n     * Converts `map` to its key-value pairs.\n     *\n     * @private\n     * @param {Object} map The map to convert.\n     * @returns {Array} Returns the key-value pairs.\n     */\n\n\n    function mapToArray(map) {\n      var index = -1,\n          result = Array(map.size);\n      map.forEach(function (value, key) {\n        result[++index] = [key, value];\n      });\n      return result;\n    }\n    /**\n     * Creates a unary function that invokes `func` with its argument transformed.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {Function} transform The argument transform.\n     * @returns {Function} Returns the new function.\n     */\n\n\n    function overArg(func, transform) {\n      return function (arg) {\n        return func(transform(arg));\n      };\n    }\n    /**\n     * Converts `set` to an array of its values.\n     *\n     * @private\n     * @param {Object} set The set to convert.\n     * @returns {Array} Returns the values.\n     */\n\n\n    function setToArray(set) {\n      var index = -1,\n          result = Array(set.size);\n      set.forEach(function (value) {\n        result[++index] = value;\n      });\n      return result;\n    }\n    /** Used for built-in method references. */\n\n\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n    /** Used to detect overreaching core-js shims. */\n\n    var coreJsData = root['__core-js_shared__'];\n    /** Used to detect methods masquerading as native. */\n\n    var maskSrcKey = function () {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? 'Symbol(src)_1.' + uid : '';\n    }();\n    /** Used to resolve the decompiled source of functions. */\n\n\n    var funcToString = funcProto.toString;\n    /** Used to check objects for own properties. */\n\n    var hasOwnProperty = objectProto.hasOwnProperty;\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n\n    var objectToString = objectProto.toString;\n    /** Used to detect if a method is native. */\n\n    var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n    /** Built-in value references. */\n\n    var Symbol = root.Symbol,\n        Uint8Array = root.Uint8Array,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice;\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n\n    var nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max;\n    /* Built-in method references that are verified to be native. */\n\n    var DataView = getNative(root, 'DataView'),\n        Map = getNative(root, 'Map'),\n        Promise = getNative(root, 'Promise'),\n        Set = getNative(root, 'Set'),\n        WeakMap = getNative(root, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n    /** Used to detect maps, sets, and weakmaps. */\n\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n    /** Used to convert symbols to primitives and strings. */\n\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n      this.clear();\n\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n\n\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    }\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n\n\n    function hashDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n\n\n    function hashGet(key) {\n      var data = this.__data__;\n\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n\n\n    function hashSet(key, value) {\n      var data = this.__data__;\n      data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n      return this;\n    } // Add methods to `Hash`.\n\n\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n      this.clear();\n\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n\n\n    function listCacheClear() {\n      this.__data__ = [];\n    }\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n\n\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n\n      var lastIndex = data.length - 1;\n\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n\n      return true;\n    }\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n\n\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n      return index < 0 ? undefined : data[index][1];\n    }\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n\n\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n\n      return this;\n    } // Add methods to `ListCache`.\n\n\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n      this.clear();\n\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n\n\n    function mapCacheClear() {\n      this.__data__ = {\n        'hash': new Hash(),\n        'map': new (Map || ListCache)(),\n        'string': new Hash()\n      };\n    }\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n\n\n    function mapCacheDelete(key) {\n      return getMapData(this, key)['delete'](key);\n    }\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n\n\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n\n\n    function mapCacheSet(key, value) {\n      getMapData(this, key).set(key, value);\n      return this;\n    } // Add methods to `MapCache`.\n\n\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n      this.__data__ = new MapCache();\n\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n\n\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n\n      return this;\n    }\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n\n\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    } // Add methods to `SetCache`.\n\n\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n\n    function Stack(entries) {\n      this.__data__ = new ListCache(entries);\n    }\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n\n\n    function stackClear() {\n      this.__data__ = new ListCache();\n    }\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n\n\n    function stackDelete(key) {\n      return this.__data__['delete'](key);\n    }\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n\n\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n\n\n    function stackSet(key, value) {\n      var cache = this.__data__;\n\n      if (cache instanceof ListCache) {\n        var pairs = cache.__data__;\n\n        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n          pairs.push([key, value]);\n          return this;\n        }\n\n        cache = this.__data__ = new MapCache(pairs);\n      }\n\n      cache.set(key, value);\n      return this;\n    } // Add methods to `Stack`.\n\n\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n\n    function arrayLikeKeys(value, inherited) {\n      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n      // Safari 9 makes `arguments.length` enumerable in strict mode.\n      var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];\n      var length = result.length,\n          skipIndexes = !!length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n\n\n    function assocIndexOf(array, key) {\n      var length = array.length;\n\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n\n      return -1;\n    }\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n\n\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n\n      return index && index == length ? object : undefined;\n    }\n    /**\n     * The base implementation of `getTag`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n\n\n    function baseGetTag(value) {\n      return objectToString.call(value);\n    }\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n\n\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n\n\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n\n      if (value == null || other == null || !isObject(value) && !isObjectLike(other)) {\n        return value !== value && other !== other;\n      }\n\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack());\n        return objIsArr || isTypedArray(object) ? equalArrays(object, other, equalFunc, customizer, bitmask, stack) : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n          stack || (stack = new Stack());\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n\n      if (!isSameTag) {\n        return false;\n      }\n\n      stack || (stack = new Stack());\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n\n\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n\n      object = Object(object);\n\n      while (index--) {\n        var data = matchData[index];\n\n        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n          return false;\n        }\n      }\n\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack();\n\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack) : result)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n\n\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n\n      var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n\n\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n\n\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n\n      if (value == null) {\n        return identity;\n      }\n\n      if (typeof value == 'object') {\n        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n      }\n\n      return property(value);\n    }\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n\n\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n\n      var result = [];\n\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n\n\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n\n      return function (object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n\n\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n\n      return function (object) {\n        var objValue = get(object, path);\n        return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n\n\n    function basePropertyDeep(path) {\n      return function (object) {\n        return baseGet(object, path);\n      };\n    }\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n\n\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n\n      var result = value + '';\n      return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n    }\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n\n\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n\n\n    function createFind(findIndexFunc) {\n      return function (collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n\n        if (!isArrayLike(collection)) {\n          var iteratee = baseIteratee(predicate, 3);\n          collection = keys(collection);\n\n          predicate = function predicate(key) {\n            return iteratee(iterable[key], key, iterable);\n          };\n        }\n\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n\n\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(array);\n\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n\n      var index = -1,\n          result = true,\n          seen = bitmask & UNORDERED_COMPARE_FLAG ? new SetCache() : undefined;\n      stack.set(array, other);\n      stack.set(other, array); // Ignore non-index properties.\n\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n        }\n\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n\n          result = false;\n          break;\n        } // Recursively compare arrays (susceptible to call stack limits).\n\n\n        if (seen) {\n          if (!arraySome(other, function (othValue, othIndex) {\n            if (!seen.has(othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n            result = false;\n            break;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n          result = false;\n          break;\n        }\n      }\n\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n            return false;\n          }\n\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == other + '';\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          } // Assume cyclic values are equal.\n\n\n          var stacked = stack.get(object);\n\n          if (stacked) {\n            return stacked == other;\n          }\n\n          bitmask |= UNORDERED_COMPARE_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n\n      }\n\n      return false;\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n\n      var index = objLength;\n\n      while (index--) {\n        var key = objProps[index];\n\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n      var skipCtor = isPartial;\n\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n        } // Recursively compare objects (susceptible to call stack limits).\n\n\n        if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack) : compared)) {\n          result = false;\n          break;\n        }\n\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n\n\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n    }\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n\n\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n\n      return result;\n    }\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n\n\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n\n\n    var getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11,\n    // for data views in Edge < 14, and promises in Node.js.\n\n    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n      getTag = function getTag(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString:\n              return dataViewTag;\n\n            case mapCtorString:\n              return mapTag;\n\n            case promiseCtorString:\n              return promiseTag;\n\n            case setCtorString:\n              return setTag;\n\n            case weakMapCtorString:\n              return weakMapTag;\n          }\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n\n\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      var result,\n          index = -1,\n          length = path.length;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n\n        object = object[key];\n      }\n\n      if (result) {\n        return result;\n      }\n\n      var length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n    }\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n\n\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n    }\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n\n\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n\n      var type = typeof value;\n\n      if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n        return true;\n      }\n\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n    }\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n\n\n    function isKeyable(value) {\n      var type = typeof value;\n      return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n    }\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n\n\n    function isMasked(func) {\n      return !!maskSrcKey && maskSrcKey in func;\n    }\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n\n\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n      return value === proto;\n    }\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n\n\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n\n\n    function matchesStrictComparable(key, srcValue) {\n      return function (object) {\n        if (object == null) {\n          return false;\n        }\n\n        return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n      };\n    }\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n\n\n    var stringToPath = memoize(function (string) {\n      string = toString(string);\n      var result = [];\n\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n\n      string.replace(rePropName, function (match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);\n      });\n      return result;\n    });\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n\n      var result = value + '';\n      return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n    }\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n\n\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n\n        try {\n          return func + '';\n        } catch (e) {}\n      }\n\n      return '';\n    }\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n\n\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return -1;\n      }\n\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n\n      return baseFindIndex(array, baseIteratee(predicate, 3), index);\n    }\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n\n\n    var find = createFind(findIndex);\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || resolver && typeof resolver != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      var memoized = function memoized() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n\n      memoized.cache = new (memoize.Cache || MapCache)();\n      return memoized;\n    } // Assign cache to `_.memoize`.\n\n\n    memoize.Cache = MapCache;\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n\n    function eq(value, other) {\n      return value === other || value !== value && other !== other;\n    }\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n\n\n    function isArguments(value) {\n      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n\n\n    var isArray = Array.isArray;\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n\n\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n\n\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8-9 which returns 'object' for typed array and other constructors.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n\n\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n\n\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n\n\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n\n\n    function isSymbol(value) {\n      return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n    }\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n\n\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n\n      value = toNumber(value);\n\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = value < 0 ? -1 : 1;\n        return sign * MAX_INTEGER;\n      }\n\n      return value === value ? value : 0;\n    }\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n\n\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n      return result === result ? remainder ? result - remainder : result : 0;\n    }\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n\n\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n\n      if (isSymbol(value)) {\n        return NAN;\n      }\n\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? other + '' : other;\n      }\n\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n    }\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n\n\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n\n\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n\n\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n\n\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n\n\n    function identity(value) {\n      return value;\n    }\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n\n\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    module.exports = find;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(6), __webpack_require__(7)(module));\n  /***/\n},\n/* 6 */\n\n/***/\nfunction (module, exports) {\n  var g; // This works in non-strict mode\n\n  g = function () {\n    return this;\n  }();\n\n  try {\n    // This works if eval is allowed (see CSP)\n    g = g || Function(\"return this\")() || (1, eval)(\"this\");\n  } catch (e) {\n    // This works if the window reference is available\n    if (typeof window === \"object\") g = window;\n  } // g can still be undefined, but nothing to do about it...\n  // We return undefined, instead of nothing here, so it's\n  // easier to handle this case. if(!global) { ...}\n\n\n  module.exports = g;\n  /***/\n},\n/* 7 */\n\n/***/\nfunction (module, exports) {\n  module.exports = function (module) {\n    if (!module.webpackPolyfill) {\n      module.deprecate = function () {};\n\n      module.paths = []; // module.parent = undefined by default\n\n      if (!module.children) module.children = [];\n      Object.defineProperty(module, \"loaded\", {\n        enumerable: true,\n        get: function get() {\n          return module.l;\n        }\n      });\n      Object.defineProperty(module, \"id\", {\n        enumerable: true,\n        get: function get() {\n          return module.i;\n        }\n      });\n      module.webpackPolyfill = 1;\n    }\n\n    return module;\n  };\n  /***/\n\n},\n/* 8 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (global, module) {\n    /**\n    * Lodash (Custom Build) <https://lodash.com/>\n    * Build: `lodash modularize exports=\"npm\" -o ./`\n    * Copyright JS Foundation and other contributors <https://js.foundation/>\n    * Released under MIT license <https://lodash.com/license>\n    * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n    * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n    */\n\n    /** Used as the size to enable large array optimizations. */\n    var LARGE_ARRAY_SIZE = 200;\n    /** Used to stand-in for `undefined` hash values. */\n\n    var HASH_UNDEFINED = '__lodash_hash_undefined__';\n    /** Used to compose bitmasks for value comparisons. */\n\n    var COMPARE_PARTIAL_FLAG = 1,\n        COMPARE_UNORDERED_FLAG = 2;\n    /** Used as references for various `Number` constants. */\n\n    var MAX_SAFE_INTEGER = 9007199254740991;\n    /** `Object#toString` result references. */\n\n    var argsTag = '[object Arguments]',\n        arrayTag = '[object Array]',\n        asyncTag = '[object AsyncFunction]',\n        boolTag = '[object Boolean]',\n        dateTag = '[object Date]',\n        errorTag = '[object Error]',\n        funcTag = '[object Function]',\n        genTag = '[object GeneratorFunction]',\n        mapTag = '[object Map]',\n        numberTag = '[object Number]',\n        nullTag = '[object Null]',\n        objectTag = '[object Object]',\n        promiseTag = '[object Promise]',\n        proxyTag = '[object Proxy]',\n        regexpTag = '[object RegExp]',\n        setTag = '[object Set]',\n        stringTag = '[object String]',\n        symbolTag = '[object Symbol]',\n        undefinedTag = '[object Undefined]',\n        weakMapTag = '[object WeakMap]';\n    var arrayBufferTag = '[object ArrayBuffer]',\n        dataViewTag = '[object DataView]',\n        float32Tag = '[object Float32Array]',\n        float64Tag = '[object Float64Array]',\n        int8Tag = '[object Int8Array]',\n        int16Tag = '[object Int16Array]',\n        int32Tag = '[object Int32Array]',\n        uint8Tag = '[object Uint8Array]',\n        uint8ClampedTag = '[object Uint8ClampedArray]',\n        uint16Tag = '[object Uint16Array]',\n        uint32Tag = '[object Uint32Array]';\n    /**\n     * Used to match `RegExp`\n     * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n     */\n\n    var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n    /** Used to detect host constructors (Safari). */\n\n    var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n    /** Used to detect unsigned integer values. */\n\n    var reIsUint = /^(?:0|[1-9]\\d*)$/;\n    /** Used to identify `toStringTag` values of typed arrays. */\n\n    var typedArrayTags = {};\n    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\n    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n    /** Detect free variable `global` from Node.js. */\n\n    var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n    /** Detect free variable `self`. */\n\n    var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n    /** Used as a reference to the global object. */\n\n    var root = freeGlobal || freeSelf || Function('return this')();\n    /** Detect free variable `exports`. */\n\n    var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n    /** Detect free variable `module`. */\n\n    var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n    /** Detect the popular CommonJS extension `module.exports`. */\n\n    var moduleExports = freeModule && freeModule.exports === freeExports;\n    /** Detect free variable `process` from Node.js. */\n\n    var freeProcess = moduleExports && freeGlobal.process;\n    /** Used to access faster Node.js helpers. */\n\n    var nodeUtil = function () {\n      try {\n        return freeProcess && freeProcess.binding && freeProcess.binding('util');\n      } catch (e) {}\n    }();\n    /* Node.js helper references. */\n\n\n    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n    /**\n     * A specialized version of `_.filter` for arrays without support for\n     * iteratee shorthands.\n     *\n     * @private\n     * @param {Array} [array] The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (predicate(value, index, array)) {\n          result[resIndex++] = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n\n      return array;\n    }\n    /**\n     * A specialized version of `_.some` for arrays without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} [array] The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n\n\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array == null ? 0 : array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * The base implementation of `_.times` without support for iteratee shorthands\n     * or max array length checks.\n     *\n     * @private\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     */\n\n\n    function baseTimes(n, iteratee) {\n      var index = -1,\n          result = Array(n);\n\n      while (++index < n) {\n        result[index] = iteratee(index);\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.unary` without support for storing metadata.\n     *\n     * @private\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     */\n\n\n    function baseUnary(func) {\n      return function (value) {\n        return func(value);\n      };\n    }\n    /**\n     * Checks if a `cache` value for `key` exists.\n     *\n     * @private\n     * @param {Object} cache The cache to query.\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n\n    function cacheHas(cache, key) {\n      return cache.has(key);\n    }\n    /**\n     * Gets the value at `key` of `object`.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n\n\n    function getValue(object, key) {\n      return object == null ? undefined : object[key];\n    }\n    /**\n     * Converts `map` to its key-value pairs.\n     *\n     * @private\n     * @param {Object} map The map to convert.\n     * @returns {Array} Returns the key-value pairs.\n     */\n\n\n    function mapToArray(map) {\n      var index = -1,\n          result = Array(map.size);\n      map.forEach(function (value, key) {\n        result[++index] = [key, value];\n      });\n      return result;\n    }\n    /**\n     * Creates a unary function that invokes `func` with its argument transformed.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {Function} transform The argument transform.\n     * @returns {Function} Returns the new function.\n     */\n\n\n    function overArg(func, transform) {\n      return function (arg) {\n        return func(transform(arg));\n      };\n    }\n    /**\n     * Converts `set` to an array of its values.\n     *\n     * @private\n     * @param {Object} set The set to convert.\n     * @returns {Array} Returns the values.\n     */\n\n\n    function setToArray(set) {\n      var index = -1,\n          result = Array(set.size);\n      set.forEach(function (value) {\n        result[++index] = value;\n      });\n      return result;\n    }\n    /** Used for built-in method references. */\n\n\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n    /** Used to detect overreaching core-js shims. */\n\n    var coreJsData = root['__core-js_shared__'];\n    /** Used to resolve the decompiled source of functions. */\n\n    var funcToString = funcProto.toString;\n    /** Used to check objects for own properties. */\n\n    var hasOwnProperty = objectProto.hasOwnProperty;\n    /** Used to detect methods masquerading as native. */\n\n    var maskSrcKey = function () {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? 'Symbol(src)_1.' + uid : '';\n    }();\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n\n\n    var nativeObjectToString = objectProto.toString;\n    /** Used to detect if a method is native. */\n\n    var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n    /** Built-in value references. */\n\n    var Buffer = moduleExports ? root.Buffer : undefined,\n        Symbol = root.Symbol,\n        Uint8Array = root.Uint8Array,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n\n    var nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeKeys = overArg(Object.keys, Object);\n    /* Built-in method references that are verified to be native. */\n\n    var DataView = getNative(root, 'DataView'),\n        Map = getNative(root, 'Map'),\n        Promise = getNative(root, 'Promise'),\n        Set = getNative(root, 'Set'),\n        WeakMap = getNative(root, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n    /** Used to detect maps, sets, and weakmaps. */\n\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n    /** Used to convert symbols to primitives and strings. */\n\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n      this.clear();\n\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n\n\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n\n\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n\n\n    function hashGet(key) {\n      var data = this.__data__;\n\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n\n\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n      return this;\n    } // Add methods to `Hash`.\n\n\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n      this.clear();\n\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n\n\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n\n\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n\n      var lastIndex = data.length - 1;\n\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n\n      --this.size;\n      return true;\n    }\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n\n\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n      return index < 0 ? undefined : data[index][1];\n    }\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n\n\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n\n      return this;\n    } // Add methods to `ListCache`.\n\n\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n      this.clear();\n\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n\n\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash(),\n        'map': new (Map || ListCache)(),\n        'string': new Hash()\n      };\n    }\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n\n\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n\n\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n\n\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    } // Add methods to `MapCache`.\n\n\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n      this.__data__ = new MapCache();\n\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n\n\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n\n      return this;\n    }\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n\n\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    } // Add methods to `SetCache`.\n\n\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n\n\n    function stackClear() {\n      this.__data__ = new ListCache();\n      this.size = 0;\n    }\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n\n\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n      this.size = data.size;\n      return result;\n    }\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n\n\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n\n\n    function stackSet(key, value) {\n      var data = this.__data__;\n\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n\n        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n\n        data = this.__data__ = new MapCache(pairs);\n      }\n\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    } // Add methods to `Stack`.\n\n\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n        key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n        isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n        isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n        isIndex(key, length)))) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n\n\n    function assocIndexOf(array, key) {\n      var length = array.length;\n\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n\n      return -1;\n    }\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n\n\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n\n\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n\n      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n    }\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n\n\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n\n\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n\n      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n        return value !== value && other !== other;\n      }\n\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n\n        objIsArr = true;\n        objIsObj = false;\n      }\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack());\n        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n          stack || (stack = new Stack());\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n\n      if (!isSameTag) {\n        return false;\n      }\n\n      stack || (stack = new Stack());\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n\n\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n\n\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n\n\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n\n      var result = [];\n\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n\n\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(array);\n\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n\n      var index = -1,\n          result = true,\n          seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n      stack.set(array, other);\n      stack.set(other, array); // Ignore non-index properties.\n\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n        }\n\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n\n          result = false;\n          break;\n        } // Recursively compare arrays (susceptible to call stack limits).\n\n\n        if (seen) {\n          if (!arraySome(other, function (othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n            result = false;\n            break;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          result = false;\n          break;\n        }\n      }\n\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n            return false;\n          }\n\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == other + '';\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          } // Assume cyclic values are equal.\n\n\n          var stacked = stack.get(object);\n\n          if (stacked) {\n            return stacked == other;\n          }\n\n          bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n\n      }\n\n      return false;\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n\n      var index = objLength;\n\n      while (index--) {\n        var key = objProps[index];\n\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n      var skipCtor = isPartial;\n\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n        } // Recursively compare objects (susceptible to call stack limits).\n\n\n        if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n          result = false;\n          break;\n        }\n\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n\n\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n\n\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n    }\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n\n\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n\n\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n\n\n    var getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n      if (object == null) {\n        return [];\n      }\n\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function (symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n\n    var getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\n    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n      getTag = function getTag(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString:\n              return dataViewTag;\n\n            case mapCtorString:\n              return mapTag;\n\n            case promiseCtorString:\n              return promiseTag;\n\n            case setCtorString:\n              return setTag;\n\n            case weakMapCtorString:\n              return weakMapTag;\n          }\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n\n\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n    }\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n\n\n    function isKeyable(value) {\n      var type = typeof value;\n      return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n    }\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n\n\n    function isMasked(func) {\n      return !!maskSrcKey && maskSrcKey in func;\n    }\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n\n\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n      return value === proto;\n    }\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n\n\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n\n\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n\n        try {\n          return func + '';\n        } catch (e) {}\n      }\n\n      return '';\n    }\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n\n\n    function eq(value, other) {\n      return value === other || value !== value && other !== other;\n    }\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n\n\n    var isArguments = baseIsArguments(function () {\n      return arguments;\n    }()) ? baseIsArguments : function (value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    };\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n\n    var isArray = Array.isArray;\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n\n\n    var isBuffer = nativeIsBuffer || stubFalse;\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n\n\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      } // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n\n\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n\n\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n\n\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n\n\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n\n\n    function stubArray() {\n      return [];\n    }\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n\n\n    function stubFalse() {\n      return false;\n    }\n\n    module.exports = isEqual;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(6), __webpack_require__(7)(module));\n  /***/\n},\n/* 9 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.propTypes = undefined;\n\n  var _propTypes = __webpack_require__(0);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var propTypes = exports.propTypes = {\n    columns: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n      id: _propTypes2.default.string,\n      title: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n      value: _propTypes2.default.func.isRequired\n    })).isRequired,\n    rows: _propTypes2.default.arrayOf(_propTypes2.default.any),\n    getRowKey: _propTypes2.default.func.isRequired,\n    placeholder: _propTypes2.default.string,\n    disabledCellChecker: _propTypes2.default.func,\n    focusedCell: _propTypes2.default.shape({\n      x: _propTypes2.default.number.isRequired,\n      y: _propTypes2.default.number.isRequired\n    }),\n    onCellClick: _propTypes2.default.func,\n    blurCurrentFocus: _propTypes2.default.bool,\n    focusOnSingleClick: _propTypes2.default.bool,\n    // scroll\n    headerHeight: _propTypes2.default.number,\n    rowHeight: _propTypes2.default.number,\n    // resize\n    columnWidthValues: _propTypes2.default.object\n  };\n  /***/\n},\n/* 10 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  module.exports = __webpack_require__(11);\n  /***/\n},\n/* 11 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Select = exports.Input = exports.Grid = undefined;\n\n  var _scrollWrapper = __webpack_require__(12);\n\n  var _scrollWrapper2 = _interopRequireDefault(_scrollWrapper);\n\n  var _input = __webpack_require__(26);\n\n  var _input2 = _interopRequireDefault(_input);\n\n  var _select = __webpack_require__(29);\n\n  var _select2 = _interopRequireDefault(_select);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.Grid = _scrollWrapper2.default;\n  exports.Input = _input2.default;\n  exports.Select = _select2.default;\n  /***/\n},\n/* 12 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _react = __webpack_require__(1);\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes = __webpack_require__(0);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _grid = __webpack_require__(13);\n\n  var _grid2 = _interopRequireDefault(_grid);\n\n  var _scrollDummy = __webpack_require__(19);\n\n  var _scrollDummy2 = _interopRequireDefault(_scrollDummy);\n\n  var _lodash = __webpack_require__(22);\n\n  var _lodash2 = _interopRequireDefault(_lodash);\n\n  var _throttleWithRAF = __webpack_require__(23);\n\n  var _throttleWithRAF2 = _interopRequireDefault(_throttleWithRAF);\n\n  var _tablePropTypes = __webpack_require__(9);\n\n  var _tablePropTypes2 = _interopRequireDefault(_tablePropTypes);\n\n  var _styles = __webpack_require__(24);\n\n  var _styles2 = _interopRequireDefault(_styles);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var RESERVE_ROWS_COUNT = 3;\n\n  var SpreadsheetGridScrollWrapper = function (_React$PureComponent) {\n    _inherits(SpreadsheetGridScrollWrapper, _React$PureComponent);\n\n    function SpreadsheetGridScrollWrapper(props) {\n      _classCallCheck(this, SpreadsheetGridScrollWrapper);\n\n      var _this = _possibleConstructorReturn(this, (SpreadsheetGridScrollWrapper.__proto__ || Object.getPrototypeOf(SpreadsheetGridScrollWrapper)).call(this, props));\n\n      _this.onScroll = _this.onScroll.bind(_this);\n      _this.onResize = _this.onResize.bind(_this);\n      _this.calculateScrollState = _this.calculateScrollState.bind(_this);\n      _this.startColumnResize = _this.startColumnResize.bind(_this);\n      _this.processColumnResize = _this.processColumnResize.bind(_this);\n      _this.state = {\n        blurCurrentFocus: props.blurCurrentFocus,\n        first: 0,\n        last: _this.calculateInitialLast(),\n        offset: 0,\n        columnWidthValues: {}\n      }; // if requestAnimationFrame is available, use it to throttle refreshState\n\n      if (typeof window !== 'undefined' && 'requestAnimationFrame' in window) {\n        _this.calculateScrollState = (0, _throttleWithRAF2.default)(_this.calculateScrollState);\n      }\n\n      return _this;\n    }\n\n    _createClass(SpreadsheetGridScrollWrapper, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        this.freezeTable(this.props.columnWidthValues);\n\n        if (this.props.isColumnsResizable) {\n          document.addEventListener('mousemove', this.processColumnResize, false);\n          document.addEventListener('mouseup', function () {\n            _this2.resizingCell = null;\n          }, false);\n        }\n\n        window.addEventListener('resize', this.onResize, false);\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(newProps) {\n        if (this.state.blurCurrentFocus !== newProps.blurCurrentFocus) {\n          this.setState({\n            blurCurrentFocus: newProps.blurCurrentFocus\n          });\n        }\n\n        if (newProps.resetScroll) {\n          this.scrollWrapperElement.scrollTop = 0;\n          this.calculateScrollState(newProps.rows);\n          return;\n        }\n\n        if (newProps.rows !== this.props.rows) {\n          this.calculateScrollState(newProps.rows);\n        }\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(prevProps) {\n        // If columns has been changed, recalculate their width values.\n        if (prevProps.columns !== this.props.columns) {\n          this.freezeTable(this.props.columnWidthValues);\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        var _this3 = this;\n\n        if (this.props.isColumnsResizable) {\n          document.removeEventListener('mousemove', this.processColumnResize, false);\n          document.removeEventListener('mouseup', function () {\n            _this3.resizingCell = null;\n          }, false);\n        }\n\n        window.removeEventListener('resize', this.onResize, false);\n      }\n    }, {\n      key: 'freezeTable',\n      value: function freezeTable() {\n        var _this4 = this;\n\n        var columnWidthValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var table = this.tableElement; // There is no grid when Jest is running tests\n\n        if (table) {\n          var cells = table.querySelectorAll('.SpreadsheetGrid__headCell');\n          var preparedColumnWidthValues = {};\n          var sumOfWidth = 0;\n          Object.keys(columnWidthValues).forEach(function (id) {\n            sumOfWidth += columnWidthValues[id];\n          });\n\n          if (Math.round(sumOfWidth) > 100) {\n            console.error('react-spreadsheet-grid ERROR: The sum of column width values in ' + 'the \"columnWidthValues\" property is more then 100 percents! ' + 'The values are not being used in this condition!');\n            columnWidthValues = {};\n          }\n\n          var restTableWidth = 100;\n          var restColumnsCount = cells.length;\n          cells.forEach(function (cell, i) {\n            var id = _this4.props.columns[i].id;\n\n            if (columnWidthValues[id]) {\n              preparedColumnWidthValues[id] = columnWidthValues[id];\n              restTableWidth -= columnWidthValues[id];\n              restColumnsCount--;\n            }\n          });\n          cells.forEach(function (cell, i) {\n            var id = _this4.props.columns[i].id;\n\n            if (!columnWidthValues[id]) {\n              preparedColumnWidthValues[id] = restTableWidth / restColumnsCount;\n            }\n          });\n          this.setState({\n            columnWidthValues: preparedColumnWidthValues\n          });\n        }\n      }\n    }, {\n      key: 'startColumnResize',\n      value: function startColumnResize(e) {\n        this.resizingCell = e.currentTarget.offsetParent;\n        this.resizingCell.startOffset = this.resizingCell.offsetWidth - e.pageX;\n        this.nextResizingCell = this.resizingCell.nextSibling;\n        this.nextResizingCell.startOffset = document.body.offsetWidth - this.nextResizingCell.offsetWidth - e.pageX;\n      }\n    }, {\n      key: 'processColumnResize',\n      value: function processColumnResize(e, nextCell) {\n        var direction = void 0;\n        var sibling = void 0;\n        var table = this.tableElement;\n        var tableWidth = table.offsetWidth;\n        var columns = this.props.columns;\n\n        if (this.currentCoords <= e.pageX) {\n          direction = 'toRight';\n        }\n\n        if (this.resizingCell) {\n          var columnWidthValues = Object.assign({}, this.state.columnWidthValues);\n\n          if (direction === 'toRight') {\n            var diff = this.resizingCell.startOffset + e.pageX - this.resizingCell.offsetWidth;\n\n            if (this.currentCoords) {\n              sibling = nextCell || this.resizingCell.nextSibling;\n            }\n\n            if (this.resizingCell.offsetWidth + diff > 100 && sibling.offsetWidth - diff > 100) {\n              var prevValue1 = columnWidthValues[columns[this.resizingCell.dataset.index].id];\n              var newValue1 = (this.resizingCell.offsetWidth + diff) * 100 / tableWidth;\n              columnWidthValues[columns[this.resizingCell.dataset.index].id] = newValue1;\n              columnWidthValues[columns[sibling.dataset.index].id] -= newValue1 - prevValue1;\n              this.setState({\n                columnWidthValues: columnWidthValues\n              });\n            } else {\n              var cell = void 0;\n\n              if (nextCell) {\n                cell = nextCell.nextSibling;\n              } else {\n                cell = this.resizingCell.nextSibling.nextSibling;\n              }\n\n              if (cell) {\n                this.processColumnResize(e, cell);\n              }\n            }\n          } else {\n            if (this.currentCoords) {\n              sibling = nextCell || this.resizingCell;\n            }\n\n            var _diff = document.body.offsetWidth - e.pageX - this.nextResizingCell.startOffset - this.nextResizingCell.offsetWidth;\n\n            if (sibling.offsetWidth - _diff > 100 && this.nextResizingCell.offsetWidth + _diff > 100) {\n              var _prevValue = columnWidthValues[columns[sibling.dataset.index].id];\n\n              var _newValue = (parseInt(sibling.offsetWidth, 10) - _diff) * 100 / tableWidth;\n\n              columnWidthValues[columns[sibling.dataset.index].id] = _newValue;\n              columnWidthValues[columns[this.nextResizingCell.dataset.index].id] -= _newValue - _prevValue;\n              this.setState({\n                columnWidthValues: columnWidthValues\n              });\n            } else {\n              var _cell = void 0;\n\n              if (nextCell) {\n                _cell = nextCell.previousSibling;\n              } else {\n                _cell = this.resizingCell.previousSibling;\n              }\n\n              if (_cell) {\n                this.processColumnResize(e, _cell);\n              }\n            }\n          }\n\n          if (this.props.onColumnResize) {\n            this.props.onColumnResize(columnWidthValues);\n          }\n        }\n\n        this.currentCoords = e.pageX;\n      }\n    }, {\n      key: 'calculateInitialLast',\n      value: function calculateInitialLast() {\n        return this.props.isScrollable ? Math.ceil(window.outerHeight / this.props.rowHeight) + RESERVE_ROWS_COUNT : this.props.rows.length;\n      }\n    }, {\n      key: 'calculateLast',\n      value: function calculateLast(first) {\n        var wrapper = this.scrollWrapperElement;\n        var visibleHeight = wrapper ? wrapper.parentNode.offsetHeight + 200 : 0;\n        return first + Math.ceil(visibleHeight / this.props.rowHeight);\n      }\n    }, {\n      key: 'calculateScrollState',\n      value: function calculateScrollState(newRows) {\n        var scrollWrapperElement = this.scrollWrapperElement;\n        var rows = newRows || this.props.rows;\n\n        if (!this.props.isScrollable) {\n          return;\n        }\n\n        var scrollTop = Math.max(scrollWrapperElement.scrollTop, 0);\n        var first = Math.max(0, Math.floor(scrollTop / this.props.rowHeight) - RESERVE_ROWS_COUNT);\n        var last = Math.min(rows.length, this.calculateLast(first) + RESERVE_ROWS_COUNT);\n\n        if (first !== this.state.first || last !== this.state.last) {\n          this.setState({\n            blurCurrentFocus: false,\n            first: first,\n            last: last,\n            offset: first * this.props.rowHeight,\n            hasScroll: scrollWrapperElement.scrollHeight > scrollWrapperElement.offsetHeight && // Check if the scroll has a width\n            scrollWrapperElement.offsetWidth > this.scrollDummyEl.offsetWidth\n          });\n        }\n\n        if (this.props.onScroll) {\n          this.props.onScroll(scrollTop);\n        }\n\n        if (this.props.onScrollReachesBottom && scrollWrapperElement.offsetHeight + scrollWrapperElement.scrollTop >= scrollWrapperElement.scrollHeight) {\n          this.props.onScrollReachesBottom();\n        }\n      }\n    }, {\n      key: 'onResize',\n      value: function onResize() {\n        this.calculateScrollState();\n      }\n    }, {\n      key: 'onScroll',\n      value: function onScroll() {\n        this.calculateScrollState();\n      }\n    }, {\n      key: 'getHeaderStyle',\n      value: function getHeaderStyle() {\n        if (this.state.hasScroll) {\n          return {\n            overflowY: 'scroll'\n          };\n        }\n      }\n    }, {\n      key: 'getDisabledCells',\n      value: function getDisabledCells(rows, startIndex) {\n        var _this5 = this;\n\n        var disabledCells = [];\n        var disabledCellChecker = this.props.disabledCellChecker;\n\n        if (disabledCellChecker) {\n          rows.forEach(function (row, x) {\n            _this5.props.columns.forEach(function (column, y) {\n              if (disabledCellChecker(row, column.id)) {\n                disabledCells.push({\n                  x: startIndex + x,\n                  y: y\n                });\n              }\n            });\n          });\n        }\n\n        return disabledCells;\n      }\n    }, {\n      key: 'getScrollWrapperClassName',\n      value: function getScrollWrapperClassName() {\n        return 'SpreadsheetGridScrollWrapper' + (this.props.isScrollable ? ' SpreadsheetGridScrollWrapper_scrollable' : '');\n      }\n    }, {\n      key: 'renderResizer',\n      value: function renderResizer() {\n        return _react2.default.createElement('div', {\n          className: 'SpreadsheetGrid__resizer',\n          onMouseDown: this.startColumnResize,\n          style: {\n            height: this.props.headerHeight + 'px'\n          }\n        });\n      }\n    }, {\n      key: 'renderHeader',\n      value: function renderHeader() {\n        var _this6 = this;\n\n        var columns = this.props.columns;\n        var columnWidthValues = this.state.columnWidthValues;\n        return _react2.default.createElement('div', {\n          className: 'SpreadsheetGrid__header',\n          style: this.getHeaderStyle()\n        }, columns.map(function (column, i) {\n          return _react2.default.createElement('div', {\n            key: i,\n            className: 'SpreadsheetGrid__headCell',\n            'data-index': i,\n            style: {\n              height: _this6.props.headerHeight + 'px',\n              width: columnWidthValues ? columnWidthValues[columns[i].id] + '%' : 'auto'\n            }\n          }, typeof column.title === 'string' ? column.title : column.title(), _this6.props.isColumnsResizable && i !== columns.length - 1 && _this6.renderResizer());\n        }));\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this7 = this;\n\n        var rows = (0, _lodash2.default)(this.props.rows, this.state.first, this.state.last);\n        return _react2.default.createElement('div', {\n          className: 'SpreadsheetGridContainer',\n          ref: function ref(tableElement) {\n            _this7.tableElement = tableElement;\n          }\n        }, this.renderHeader(), _react2.default.createElement('div', {\n          className: this.getScrollWrapperClassName(),\n          onScroll: this.onScroll,\n          ref: function ref(node) {\n            return _this7.scrollWrapperElement = node;\n          },\n          style: {\n            height: this.props.isScrollable ? 'calc(100% - ' + this.props.headerHeight + 'px)' : 'auto'\n          }\n        }, _react2.default.createElement(_scrollDummy2.default, {\n          rows: this.props.rows,\n          headerHeight: this.props.headerHeight,\n          rowHeight: this.props.rowHeight,\n          refEl: function refEl(el) {\n            return _this7.scrollDummyEl = el;\n          }\n        }), _react2.default.createElement(_grid2.default, _extends({}, this.props, {\n          blurCurrentFocus: this.state.blurCurrentFocus,\n          rows: rows,\n          rowsCount: this.props.rows.length,\n          startIndex: this.state.first,\n          offset: this.state.offset,\n          columnWidthValues: this.state.columnWidthValues,\n          disabledCells: this.getDisabledCells(rows, this.state.first)\n        }))));\n      }\n    }]);\n\n    return SpreadsheetGridScrollWrapper;\n  }(_react2.default.PureComponent);\n\n  SpreadsheetGridScrollWrapper.propTypes = Object.assign({}, _tablePropTypes2.default, {\n    // scroll\n    isScrollable: _propTypes2.default.bool,\n    onScroll: _propTypes2.default.func,\n    onScrollReachesBottom: _propTypes2.default.func,\n    resetScroll: _propTypes2.default.bool,\n    // resize\n    isColumnsResizable: _propTypes2.default.bool,\n    onColumnResize: _propTypes2.default.func\n  });\n  SpreadsheetGridScrollWrapper.defaultProps = {\n    rows: [],\n    isColumnsResizable: false,\n    placeholder: 'There are no rows',\n    headerHeight: 40,\n    rowHeight: 48,\n    isScrollable: true,\n    resetScroll: false,\n    focusOnSingleClick: false\n  };\n  exports.default = SpreadsheetGridScrollWrapper;\n  /***/\n},\n/* 13 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _react = __webpack_require__(1);\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes = __webpack_require__(0);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _lodash = __webpack_require__(5);\n\n  var _lodash2 = _interopRequireDefault(_lodash);\n\n  var _lodash3 = __webpack_require__(8);\n\n  var _lodash4 = _interopRequireDefault(_lodash3);\n\n  var _keymap = __webpack_require__(4);\n\n  var _keymap2 = _interopRequireDefault(_keymap);\n\n  var _tablePropTypes = __webpack_require__(9);\n\n  var _tablePropTypes2 = _interopRequireDefault(_tablePropTypes);\n\n  var _row = __webpack_require__(14);\n\n  var _row2 = _interopRequireDefault(_row);\n\n  __webpack_require__(16);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var SpreadsheetGrid = function (_React$PureComponent) {\n    _inherits(SpreadsheetGrid, _React$PureComponent);\n\n    function SpreadsheetGrid(props) {\n      _classCallCheck(this, SpreadsheetGrid);\n\n      var _this = _possibleConstructorReturn(this, (SpreadsheetGrid.__proto__ || Object.getPrototypeOf(SpreadsheetGrid)).call(this, props));\n\n      _this.onGlobalKeyDown = _this.onGlobalKeyDown.bind(_this);\n      _this.onGlobalClick = _this.onGlobalClick.bind(_this);\n      _this.onCellClick = _this.onCellClick.bind(_this);\n      _this.onCellDoubleClick = _this.onCellDoubleClick.bind(_this);\n      _this.getCellClassName = _this.getCellClassName.bind(_this);\n      _this.state = {};\n\n      if (_this.props.focusedCell) {\n        _this.state.activeCell = _this.props.focusedCell;\n        _this.state.focusedCell = _this.props.focusedCell;\n        _this.skipGlobalClick = true;\n      }\n\n      return _this;\n    }\n\n    _createClass(SpreadsheetGrid, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        document.addEventListener('keydown', this.onGlobalKeyDown, false);\n        document.addEventListener('click', this.onGlobalClick, false);\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(newProps) {\n        var disabledCells = this.props.disabledCells;\n        var newState = {};\n\n        if ((0, _lodash2.default)(disabledCells, this.state.activeCell)) {\n          newState.activeCell = null;\n        }\n\n        if ((0, _lodash2.default)(disabledCells, this.state.focusedCell)) {\n          newState.focusedCell = null;\n        }\n\n        this.setState(newState);\n\n        if (newProps.focusedCell) {\n          var newActiveCell = newProps.focusedCell;\n          this.setState({\n            activeCell: newActiveCell,\n            focusedCell: newActiveCell\n          });\n          this.skipGlobalClick = true;\n        }\n\n        if (newProps.blurCurrentFocus) {\n          this.setState({\n            focusedCell: null\n          });\n        }\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        document.removeEventListener('keydown', this.onGlobalKeyDown, false);\n        document.addEventListener('keydown', this.onGlobalKeyDown, false);\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        document.removeEventListener('keydown', this.onGlobalKeyDown, false);\n        document.removeEventListener('click', this.onGlobalClick, false);\n      }\n    }, {\n      key: 'onGlobalKeyDown',\n      value: function onGlobalKeyDown(e) {\n        var block = this;\n        var columnsCount = this.props.columns.length;\n        var rowsCount = this.props.rowsCount;\n        var newActiveCell = this.state.activeCell;\n        var newFocusedCell = this.state.focusedCell;\n\n        if (this.state.activeCell) {\n          var _moveRight = function _moveRight(_ref) {\n            var x = _ref.x,\n                y = _ref.y;\n\n            if (y < columnsCount - 1) {\n              newActiveCell = {\n                x: x,\n                y: y + 1\n              };\n            } else if (x < rowsCount - 1) {\n              newActiveCell = {\n                x: x + 1,\n                y: 0\n              };\n            }\n\n            newFocusedCell = null;\n\n            if ((0, _lodash2.default)(block.props.disabledCells, newActiveCell)) {\n              _moveRight(newActiveCell);\n            }\n          };\n\n          var _moveDown = function _moveDown(_ref2) {\n            var x = _ref2.x,\n                y = _ref2.y;\n\n            if (x < rowsCount - 1) {\n              newActiveCell = {\n                x: x + 1,\n                y: y\n              };\n            }\n\n            newFocusedCell = null;\n\n            if ((0, _lodash2.default)(block.props.disabledCells, newActiveCell)) {\n              _moveDown(newActiveCell);\n            }\n          };\n\n          var _moveUp = function _moveUp(_ref3) {\n            var x = _ref3.x,\n                y = _ref3.y;\n\n            if (x > 0) {\n              newActiveCell = {\n                x: x - 1,\n                y: y\n              };\n            }\n\n            newFocusedCell = null;\n\n            if ((0, _lodash2.default)(block.props.disabledCells, newActiveCell)) {\n              _moveUp(newActiveCell);\n            }\n          };\n\n          var _moveLeft = function _moveLeft(_ref4) {\n            var x = _ref4.x,\n                y = _ref4.y;\n\n            if (y > 0) {\n              newActiveCell = {\n                x: x,\n                y: y - 1\n              };\n            } else if (x > 0) {\n              newActiveCell = {\n                x: x - 1,\n                y: columnsCount - 1\n              };\n            }\n\n            newFocusedCell = null;\n\n            if ((0, _lodash2.default)(block.props.disabledCells, newActiveCell)) {\n              _moveLeft(newActiveCell);\n            }\n          };\n\n          var _state$activeCell = this.state.activeCell,\n              x = _state$activeCell.x,\n              y = _state$activeCell.y;\n          newFocusedCell = this.state.activeCell;\n\n          if (!this.state.focusedCell) {\n            if (e.keyCode === _keymap2.default.RIGHT) {\n              _moveRight({\n                x: x,\n                y: y\n              });\n            }\n\n            if (e.keyCode === _keymap2.default.LEFT) {\n              _moveLeft({\n                x: x,\n                y: y\n              });\n            }\n\n            if (e.keyCode === _keymap2.default.UP) {\n              e.preventDefault();\n\n              _moveUp({\n                x: x,\n                y: y\n              });\n            }\n\n            if (e.keyCode === _keymap2.default.DOWN) {\n              e.preventDefault();\n\n              _moveDown({\n                x: x,\n                y: y\n              });\n            }\n\n            if (e.keyCode === _keymap2.default.ALT) {\n              newFocusedCell = null;\n            }\n          }\n\n          if (e.keyCode === _keymap2.default.ENTER) {\n            if (this.state.focusedCell) {\n              _moveDown({\n                x: x,\n                y: y\n              });\n            } else {\n              newFocusedCell = this.state.activeCell;\n            }\n          }\n\n          if (e.keyCode === _keymap2.default.TAB) {\n            if (this.state.focusedCell) {\n              _moveRight({\n                x: x,\n                y: y\n              });\n            } else {\n              newFocusedCell = this.state.activeCell;\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n          }\n\n          if (e.keyCode === _keymap2.default.ESC) {\n            if (this.state.focusedCell) {\n              newFocusedCell = null;\n            } else if (this.state.activeCell) {\n              newActiveCell = null;\n              newFocusedCell = null;\n            }\n          }\n\n          this.setState({\n            activeCell: newActiveCell,\n            focusedCell: newFocusedCell\n          });\n        }\n      }\n    }, {\n      key: 'onGlobalClick',\n      value: function onGlobalClick() {\n        if (!this.skipGlobalClick) {\n          this.setState({\n            activeCell: null,\n            focusedCell: null\n          });\n        } else {\n          this.skipGlobalClick = false;\n        }\n      }\n    }, {\n      key: 'onCellClick',\n      value: function onCellClick(x, y, row, columnId, e) {\n        if (!(0, _lodash2.default)(this.props.disabledCells, {\n          x: x,\n          y: y\n        })) {\n          if (!e.skipCellClick && !(0, _lodash4.default)(this.state.focusedCell, {\n            x: x,\n            y: y\n          })) {\n            this.setState({\n              focusedCell: this.props.focusOnSingleClick ? {\n                x: x,\n                y: y\n              } : e.target !== e.currentTarget ? {\n                x: x,\n                y: y\n              } : null,\n              activeCell: {\n                x: x,\n                y: y\n              }\n            });\n          }\n        }\n\n        if (this.props.onCellClick) {\n          this.props.onCellClick(row, columnId);\n        }\n\n        this.skipGlobalClick = true;\n      }\n    }, {\n      key: 'onCellDoubleClick',\n      value: function onCellDoubleClick(x, y) {\n        if (!(0, _lodash2.default)(this.props.disabledCells, {\n          x: x,\n          y: y\n        })) {\n          this.setState({\n            activeCell: {\n              x: x,\n              y: y\n            },\n            focusedCell: {\n              x: x,\n              y: y\n            }\n          });\n        }\n      }\n    }, {\n      key: 'getCellClassName',\n      value: function getCellClassName(column, row, x, y) {\n        return 'SpreadsheetGrid__cell' + ((0, _lodash4.default)(this.state.activeCell, {\n          x: x,\n          y: y\n        }) ? ' SpreadsheetGrid__cell_active' : '') + ((0, _lodash4.default)(this.state.focusedCell, {\n          x: x,\n          y: y\n        }) ? ' SpreadsheetGrid__cell_focused' : '') + ((0, _lodash2.default)(this.props.disabledCells, {\n          x: x,\n          y: y\n        }) ? ' SpreadsheetGrid__cell_disabled' : '') + (column.getCellClassName ? ' ' + column.getCellClassName(row) : '');\n      }\n    }, {\n      key: 'calculatePosition',\n      value: function calculatePosition() {\n        return this.props.offset + 'px';\n      }\n    }, {\n      key: 'renderBody',\n      value: function renderBody() {\n        var _this2 = this;\n\n        var _props = this.props,\n            rows = _props.rows,\n            columns = _props.columns,\n            startIndex = _props.startIndex;\n        var body = void 0;\n\n        if (rows.length) {\n          body = rows.map(function (row, i) {\n            return _react2.default.createElement(_row2.default, {\n              x: startIndex + i,\n              key: _this2.props.getRowKey(row),\n              columns: columns,\n              row: row,\n              getCellClassName: _this2.getCellClassName,\n              onCellClick: _this2.onCellClick,\n              onCellDoubleClick: _this2.onCellDoubleClick,\n              activeCell: _this2.state.activeCell,\n              focusedCell: _this2.state.focusedCell // Pass disabled cells for this row only.\n              ,\n              disabledCells: _this2.props.disabledCells.filter(function (_ref5) {\n                var x = _ref5.x;\n                return x === startIndex + i;\n              }),\n              height: _this2.props.rowHeight,\n              columnWidthValues: _this2.props.columnWidthValues\n            });\n          });\n        } else {\n          body = _react2.default.createElement('div', {\n            className: 'SpreadsheetGrid__placeholder'\n          }, this.props.placeholder);\n        }\n\n        return body;\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement('div', {\n          className: 'SpreadsheetGrid',\n          style: {\n            transform: 'translate3d(0, ' + this.calculatePosition() + ', 0)'\n          }\n        }, this.renderBody());\n      }\n    }]);\n\n    return SpreadsheetGrid;\n  }(_react2.default.PureComponent);\n\n  SpreadsheetGrid.propTypes = Object.assign({}, _tablePropTypes2.default, {\n    offset: _propTypes2.default.number.isRequired,\n    startIndex: _propTypes2.default.number.isRequired,\n    rowsCount: _propTypes2.default.number.isRequired,\n    disabledCells: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n      x: _propTypes2.default.number,\n      y: _propTypes2.default.number\n    })).isRequired\n  });\n  SpreadsheetGrid.defaultProps = {\n    blurCurrentFocus: false\n  };\n  exports.default = SpreadsheetGrid;\n  /***/\n},\n/* 14 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _react = __webpack_require__(1);\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes = __webpack_require__(0);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _lodash = __webpack_require__(8);\n\n  var _lodash2 = _interopRequireDefault(_lodash);\n\n  var _cell = __webpack_require__(15);\n\n  var _cell2 = _interopRequireDefault(_cell);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var SpreadsheetRow = function (_React$Component) {\n    _inherits(SpreadsheetRow, _React$Component);\n\n    function SpreadsheetRow() {\n      _classCallCheck(this, SpreadsheetRow);\n\n      return _possibleConstructorReturn(this, (SpreadsheetRow.__proto__ || Object.getPrototypeOf(SpreadsheetRow)).apply(this, arguments));\n    }\n\n    _createClass(SpreadsheetRow, [{\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps) {\n        var currentActiveCell = this.props.activeCell;\n        var nextActiveCell = nextProps.activeCell;\n        var currentFocusedCell = this.props.focusedCell;\n        var nextFocusedCell = nextProps.focusedCell;\n        var isActiveCellChanged = currentActiveCell && !nextActiveCell || !currentActiveCell && nextActiveCell || currentActiveCell && nextActiveCell && (currentActiveCell.x !== nextActiveCell.x || currentActiveCell.y !== nextActiveCell.y);\n        var isFocusedCellChanged = currentFocusedCell && !nextFocusedCell || !currentFocusedCell && nextFocusedCell || currentFocusedCell && nextFocusedCell && (currentFocusedCell.x !== nextFocusedCell.x || currentFocusedCell.y !== nextFocusedCell.y);\n        return this.props.row !== nextProps.row || this.props.x !== nextProps.x || JSON.stringify(this.props.disabledCells) !== JSON.stringify(nextProps.disabledCells) || this.props.columns !== nextProps.columns || this.props.columnWidthValues !== nextProps.columnWidthValues || !!isActiveCellChanged && (currentActiveCell && currentActiveCell.x === this.props.x || nextActiveCell && nextActiveCell.x === this.props.x) || !!isFocusedCellChanged && (currentFocusedCell && currentFocusedCell.x === this.props.x || nextFocusedCell && nextFocusedCell.x === this.props.x);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        var _props = this.props,\n            x = _props.x,\n            height = _props.height,\n            columns = _props.columns,\n            row = _props.row,\n            onCellClick = _props.onCellClick,\n            onCellDoubleClick = _props.onCellDoubleClick,\n            getCellClassName = _props.getCellClassName,\n            activeCell = _props.activeCell,\n            focusedCell = _props.focusedCell,\n            columnWidthValues = _props.columnWidthValues;\n        return _react2.default.createElement('div', {\n          className: 'SpreadsheetGrid__row',\n          style: {\n            height: height + 'px'\n          }\n        }, columns.map(function (column, y) {\n          var coords = {\n            x: x,\n            y: y\n          };\n          var disabled = !!_this2.props.disabledCells.find(function (cell) {\n            return cell.x === x && cell.y === y;\n          });\n          return _react2.default.createElement(_cell2.default, {\n            y: y,\n            key: y,\n            className: getCellClassName(column, row, x, y),\n            onClick: !disabled ? onCellClick.bind(_this2, x, y, row, column.id) : null,\n            onDoubleClick: !disabled ? onCellDoubleClick.bind(_this2, x, y) : null,\n            width: columnWidthValues[column.id]\n          }, column.value(row, {\n            active: (0, _lodash2.default)(activeCell, coords),\n            focus: (0, _lodash2.default)(focusedCell, coords),\n            disabled: disabled\n          }));\n        }));\n      }\n    }]);\n\n    return SpreadsheetRow;\n  }(_react2.default.Component);\n\n  SpreadsheetRow.propTypes = {\n    x: _propTypes2.default.number.isRequired,\n    columns: _propTypes2.default.array.isRequired,\n    row: _propTypes2.default.any.isRequired,\n    onCellClick: _propTypes2.default.func,\n    onCellDoubleClick: _propTypes2.default.func,\n    activeCell: _propTypes2.default.object,\n    focusedCell: _propTypes2.default.object,\n    getCellClassName: _propTypes2.default.func,\n    disabledCells: _propTypes2.default.arrayOf(_propTypes2.default.object),\n    height: _propTypes2.default.number,\n    columnWidthValues: _propTypes2.default.object\n  };\n  exports.default = SpreadsheetRow;\n  /***/\n},\n/* 15 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _react = __webpack_require__(1);\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes = __webpack_require__(0);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var SpreadsheetCell = function SpreadsheetCell(props) {\n    var y = props.y,\n        className = props.className,\n        onClick = props.onClick,\n        onDoubleClick = props.onDoubleClick,\n        children = props.children,\n        width = props.width;\n    return _react2.default.createElement('div', {\n      key: y,\n      className: className,\n      onClick: onClick,\n      onDoubleClick: onDoubleClick,\n      style: {\n        width: width + '%'\n      }\n    }, children);\n  };\n\n  SpreadsheetCell.propTypes = {\n    y: _propTypes2.default.number.isRequired,\n    children: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string, _propTypes2.default.element, _propTypes2.default.arrayOf(_propTypes2.default.element)]).isRequired,\n    className: _propTypes2.default.string,\n    onClick: _propTypes2.default.func,\n    onDoubleClick: _propTypes2.default.func,\n    width: _propTypes2.default.number\n  };\n  exports.default = SpreadsheetCell;\n  /***/\n},\n/* 16 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  // style-loader: Adds some css to the DOM by adding a <style> tag\n  // load the styles\n  var content = __webpack_require__(17);\n\n  if (typeof content === 'string') content = [[module.i, content, '']]; // Prepare cssTransformation\n\n  var transform;\n  var options = {\n    \"sourceMap\": true,\n    \"hmr\": true\n  };\n  options.transform = transform; // add the styles to the DOM\n\n  var update = __webpack_require__(3)(content, options);\n\n  if (content.locals) module.exports = content.locals; // Hot Module Replacement\n\n  if (false) {\n    // When the styles change, update the <style> tags\n    if (!content.locals) {\n      module.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./styles.css\", function () {\n        var newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./styles.css\");\n\n        if (typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n        update(newContent);\n      });\n    } // When the module is disposed, remove the <style> tags\n\n\n    module.hot.dispose(function () {\n      update();\n    });\n  }\n  /***/\n\n},\n/* 17 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  exports = module.exports = __webpack_require__(2)(false); // imports\n  // module\n\n  exports.push([module.i, \".SpreadsheetGrid {\\n    width: 100%;\\n    border-collapse: collapse;\\n    position: absolute;\\n    top: 0;\\n    background-color: #827789;\\n    -webkit-box-sizing: border-box;\\n            box-sizing: border-box;\\n}\\n\\n.SpreadsheetGrid__header {\\n    display: -webkit-box;\\n    display: -webkit-flex;\\n    display: -ms-flexbox;\\n    display: flex;\\n    white-space: nowrap;\\n}\\n\\n.SpreadsheetGrid__headCell {\\n    display: -webkit-inline-box;\\n    display: -webkit-inline-flex;\\n    display: -ms-inline-flexbox;\\n    display: inline-flex;\\n    position: relative;\\n    color: white;\\n    font-size: 12px;\\n    line-height: 14px;\\n    font-weight: 500;\\n    white-space: nowrap;\\n    border-bottom: none;\\n    padding: 10px 8px 8px 8px;\\n    text-align: left;\\n    background-color: #827789;\\n    -webkit-box-align: center;\\n    -webkit-align-items: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    border-bottom: 1px solid rgba(37, 33, 40, 0.12);\\n}\\n\\n.SpreadsheetGrid__headCell:first-child {\\n    border-left: 1px solid rgba(37, 33, 40, 0.12);\\n}\\n\\n.SpreadsheetGrid__headCell {\\n    border-right: 1px solid rgba(37, 33, 40, 0.12);\\n}\\n\\n.SpreadsheetGrid__row {\\n    background-color: white;\\n    border-bottom: 1px solid #E6E1E8;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    white-space: nowrap;\\n}\\n\\n.SpreadsheetGrid__cell {\\n    display: -webkit-inline-box;\\n    display: -webkit-inline-flex;\\n    display: -ms-inline-flexbox;\\n    display: inline-flex;\\n    -webkit-box-align: center;\\n    -webkit-align-items: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    position: relative;\\n    color: #565059;\\n    cursor: pointer;\\n    border-top: none;\\n    vertical-align: middle;\\n    white-space: normal;\\n    font-size: 13px;\\n    line-height: 15px;\\n    text-overflow: ellipsis;\\n    padding: 10px;\\n    height: 100%;\\n}\\n\\n.SpreadsheetGrid__cell > * {\\n    pointer-events: none;\\n}\\n\\n.SpreadsheetGrid__cell:first-child {\\n    border-left: 1px solid #E6E1E8;\\n}\\n\\n.SpreadsheetGrid__cell {\\n    border-right: 1px solid #E6E1E8;\\n}\\n\\n.SpreadsheetGrid__cell:last-child {\\n    text-align: right;\\n}\\n\\n.SpreadsheetGrid__cell_active {\\n    -webkit-box-shadow: inset 0 0 0 2px #ff7a00;\\n            box-shadow: inset 0 0 0 2px #ff7a00;\\n    z-index: 2;\\n}\\n\\n.SpreadsheetGrid__cell_focused > * {\\n    pointer-events: auto;\\n    position: relative;\\n}\\n\\n.SpreadsheetGrid__cell_focused::after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 1px;\\n    -webkit-box-shadow: 0 2px 5px rgba(0,0,0,0.4);\\n            box-shadow: 0 2px 5px rgba(0,0,0,0.4);\\n}\\n\\n.SpreadsheetGrid__cell_disabled {\\n    cursor: default;\\n    background: rgba(239, 236, 236, 0.3);\\n}\\n\\n.SpreadsheetGrid__cell_disabled > * {\\n    opacity: 0.4;\\n}\\n\\n.SpreadsheetGrid__placeholder {\\n    text-align: center;\\n    height: 53px;\\n    background: #fff;\\n    padding: 15px;\\n}\\n\\n.SpreadsheetGrid__resizer {\\n    width: 20px;\\n    position: absolute;\\n    top: 0;\\n    right: -10px;\\n    cursor: col-resize;\\n    z-index: 2;\\n}\", \"\"]); // exports\n\n  /***/\n},\n/* 18 */\n\n/***/\nfunction (module, exports) {\n  /**\n   * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n   * embed the css on the page. This breaks all relative urls because now they are relative to a\n   * bundle instead of the current page.\n   *\n   * One solution is to only use full urls, but that may be impossible.\n   *\n   * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n   *\n   * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n   *\n   */\n  module.exports = function (css) {\n    // get current location\n    var location = typeof window !== \"undefined\" && window.location;\n\n    if (!location) {\n      throw new Error(\"fixUrls requires window.location\");\n    } // blank or null?\n\n\n    if (!css || typeof css !== \"string\") {\n      return css;\n    }\n\n    var baseUrl = location.protocol + \"//\" + location.host;\n    var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\"); // convert each url(...)\n\n    /*\n    This regular expression is just a way to recursively match brackets within\n    a string.\n    \t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n       (  = Start a capturing group\n         (?:  = Start a non-capturing group\n             [^)(]  = Match anything that isn't a parentheses\n             |  = OR\n             \\(  = Match a start parentheses\n                 (?:  = Start another non-capturing groups\n                     [^)(]+  = Match anything that isn't a parentheses\n                     |  = OR\n                     \\(  = Match a start parentheses\n                         [^)(]*  = Match anything that isn't a parentheses\n                     \\)  = Match a end parentheses\n                 )  = End Group\n                 *\\) = Match anything and then a close parens\n             )  = Close non-capturing group\n             *  = Match anything\n          )  = Close capturing group\n     \\)  = Match a close parens\n    \t /gi  = Get all matches, not the first.  Be case insensitive.\n     */\n\n    var fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function (fullMatch, origUrl) {\n      // strip quotes (if they exist)\n      var unquotedOrigUrl = origUrl.trim().replace(/^\"(.*)\"$/, function (o, $1) {\n        return $1;\n      }).replace(/^'(.*)'$/, function (o, $1) {\n        return $1;\n      }); // already a full url? no change\n\n      if (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n        return fullMatch;\n      } // convert the url to a full url\n\n\n      var newUrl;\n\n      if (unquotedOrigUrl.indexOf(\"//\") === 0) {\n        //TODO: should we add protocol?\n        newUrl = unquotedOrigUrl;\n      } else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n        // path should be relative to the base url\n        newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n      } else {\n        // path should be relative to current directory\n        newUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n      } // send back the fixed url(...)\n\n\n      return \"url(\" + JSON.stringify(newUrl) + \")\";\n    }); // send back the fixed css\n\n    return fixedCss;\n  };\n  /***/\n\n},\n/* 19 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _react = __webpack_require__(1);\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes = __webpack_require__(0);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _styles = __webpack_require__(20);\n\n  var _styles2 = _interopRequireDefault(_styles);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var SpreadsheetGridScrollDummy = function (_React$Component) {\n    _inherits(SpreadsheetGridScrollDummy, _React$Component);\n\n    function SpreadsheetGridScrollDummy(props) {\n      _classCallCheck(this, SpreadsheetGridScrollDummy);\n\n      var _this = _possibleConstructorReturn(this, (SpreadsheetGridScrollDummy.__proto__ || Object.getPrototypeOf(SpreadsheetGridScrollDummy)).call(this, props));\n\n      _this.state = {\n        rows: _this.props.rows\n      };\n\n      _this.calculateHeight();\n\n      return _this;\n    }\n\n    _createClass(SpreadsheetGridScrollDummy, [{\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(newProps) {\n        this.calculateHeight(newProps.rows);\n      }\n    }, {\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps) {\n        return nextProps.rows !== this.state.rows;\n      }\n    }, {\n      key: 'calculateHeight',\n      value: function calculateHeight() {\n        var rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.rows;\n        this.height = rows.length * this.props.rowHeight + 'px';\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement('div', {\n          className: 'SpreadsheetGridScrollDummy',\n          style: {\n            height: this.height\n          },\n          ref: this.props.refEl\n        });\n      }\n    }]);\n\n    return SpreadsheetGridScrollDummy;\n  }(_react2.default.Component);\n\n  SpreadsheetGridScrollDummy.propTypes = {\n    rows: _propTypes2.default.arrayOf(_propTypes2.default.any),\n    headerHeight: _propTypes2.default.number.isRequired,\n    rowHeight: _propTypes2.default.number.isRequired,\n    refEl: _propTypes2.default.func.isRequired\n  };\n  exports.default = SpreadsheetGridScrollDummy;\n  /***/\n},\n/* 20 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  // style-loader: Adds some css to the DOM by adding a <style> tag\n  // load the styles\n  var content = __webpack_require__(21);\n\n  if (typeof content === 'string') content = [[module.i, content, '']]; // Prepare cssTransformation\n\n  var transform;\n  var options = {\n    \"sourceMap\": true,\n    \"hmr\": true\n  };\n  options.transform = transform; // add the styles to the DOM\n\n  var update = __webpack_require__(3)(content, options);\n\n  if (content.locals) module.exports = content.locals; // Hot Module Replacement\n\n  if (false) {\n    // When the styles change, update the <style> tags\n    if (!content.locals) {\n      module.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./styles.css\", function () {\n        var newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./styles.css\");\n\n        if (typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n        update(newContent);\n      });\n    } // When the module is disposed, remove the <style> tags\n\n\n    module.hot.dispose(function () {\n      update();\n    });\n  }\n  /***/\n\n},\n/* 21 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  exports = module.exports = __webpack_require__(2)(false); // imports\n  // module\n\n  exports.push([module.i, \".SpreadsheetGridScrollDummy {\\n    position: relative;\\n    min-width: 100%;\\n}\", \"\"]); // exports\n\n  /***/\n},\n/* 22 */\n\n/***/\nfunction (module, exports) {\n  /**\n   * lodash (Custom Build) <https://lodash.com/>\n   * Build: `lodash modularize exports=\"npm\" -o ./`\n   * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n   * Released under MIT license <https://lodash.com/license>\n   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n   */\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n  /** `Object#toString` result references. */\n\n  var funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      symbolTag = '[object Symbol]';\n  /** Used to match leading and trailing whitespace. */\n\n  var reTrim = /^\\s+|\\s+$/g;\n  /** Used to detect bad signed hexadecimal string values. */\n\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n  /** Used to detect binary string values. */\n\n  var reIsBinary = /^0b[01]+$/i;\n  /** Used to detect octal string values. */\n\n  var reIsOctal = /^0o[0-7]+$/i;\n  /** Used to detect unsigned integer values. */\n\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n  /** Built-in method references without a dependency on `root`. */\n\n  var freeParseInt = parseInt;\n  /** Used for built-in method references. */\n\n  var objectProto = Object.prototype;\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n\n  var objectToString = objectProto.toString;\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : length + start;\n    }\n\n    end = end > length ? length : end;\n\n    if (end < 0) {\n      end += length;\n    }\n\n    length = start > end ? 0 : end - start >>> 0;\n    start >>>= 0;\n    var result = Array(length);\n\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n\n    return result;\n  }\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n\n\n  function isIndex(value, length) {\n    length = length == null ? MAX_SAFE_INTEGER : length;\n    return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n  }\n  /**\n   * Checks if the given arguments are from an iteratee call.\n   *\n   * @private\n   * @param {*} value The potential iteratee value argument.\n   * @param {*} index The potential iteratee index or key argument.\n   * @param {*} object The potential iteratee object argument.\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n   *  else `false`.\n   */\n\n\n  function isIterateeCall(value, index, object) {\n    if (!isObject(object)) {\n      return false;\n    }\n\n    var type = typeof index;\n\n    if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n      return eq(object[index], value);\n    }\n\n    return false;\n  }\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n\n\n  function slice(array, start, end) {\n    var length = array ? array.length : 0;\n\n    if (!length) {\n      return [];\n    }\n\n    if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n      start = 0;\n      end = length;\n    } else {\n      start = start == null ? 0 : toInteger(start);\n      end = end === undefined ? length : toInteger(end);\n    }\n\n    return baseSlice(array, start, end);\n  }\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n\n\n  function eq(value, other) {\n    return value === other || value !== value && other !== other;\n  }\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n\n\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n\n\n  function isFunction(value) {\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 8-9 which returns 'object' for typed array and other constructors.\n    var tag = isObject(value) ? objectToString.call(value) : '';\n    return tag == funcTag || tag == genTag;\n  }\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n\n\n  function isLength(value) {\n    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n\n\n  function isObject(value) {\n    var type = typeof value;\n    return !!value && (type == 'object' || type == 'function');\n  }\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n\n\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n  /**\n   * Checks if `value` is classified as a `Symbol` primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n   * @example\n   *\n   * _.isSymbol(Symbol.iterator);\n   * // => true\n   *\n   * _.isSymbol('abc');\n   * // => false\n   */\n\n\n  function isSymbol(value) {\n    return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n  }\n  /**\n   * Converts `value` to a finite number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.12.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted number.\n   * @example\n   *\n   * _.toFinite(3.2);\n   * // => 3.2\n   *\n   * _.toFinite(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toFinite(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toFinite('3.2');\n   * // => 3.2\n   */\n\n\n  function toFinite(value) {\n    if (!value) {\n      return value === 0 ? value : 0;\n    }\n\n    value = toNumber(value);\n\n    if (value === INFINITY || value === -INFINITY) {\n      var sign = value < 0 ? -1 : 1;\n      return sign * MAX_INTEGER;\n    }\n\n    return value === value ? value : 0;\n  }\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n\n\n  function toInteger(value) {\n    var result = toFinite(value),\n        remainder = result % 1;\n    return result === result ? remainder ? result - remainder : result : 0;\n  }\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n\n\n  function toNumber(value) {\n    if (typeof value == 'number') {\n      return value;\n    }\n\n    if (isSymbol(value)) {\n      return NAN;\n    }\n\n    if (isObject(value)) {\n      var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n      value = isObject(other) ? other + '' : other;\n    }\n\n    if (typeof value != 'string') {\n      return value === 0 ? value : +value;\n    }\n\n    value = value.replace(reTrim, '');\n    var isBinary = reIsBinary.test(value);\n    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n  }\n\n  module.exports = slice;\n  /***/\n},\n/* 23 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (fn) {\n    var running = false; // Seems like webpack compiles this in a way we can't use \"arguments\" here.\n    // So, three of args are enough for now.\n\n    return function (arg1, arg2, arg3) {\n      if (running) return;\n      running = true;\n      window.requestAnimationFrame(function () {\n        fn.call(undefined, arg1, arg2, arg3);\n        running = false;\n      });\n    };\n  };\n  /***/\n\n},\n/* 24 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  // style-loader: Adds some css to the DOM by adding a <style> tag\n  // load the styles\n  var content = __webpack_require__(25);\n\n  if (typeof content === 'string') content = [[module.i, content, '']]; // Prepare cssTransformation\n\n  var transform;\n  var options = {\n    \"sourceMap\": true,\n    \"hmr\": true\n  };\n  options.transform = transform; // add the styles to the DOM\n\n  var update = __webpack_require__(3)(content, options);\n\n  if (content.locals) module.exports = content.locals; // Hot Module Replacement\n\n  if (false) {\n    // When the styles change, update the <style> tags\n    if (!content.locals) {\n      module.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./styles.css\", function () {\n        var newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./styles.css\");\n\n        if (typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n        update(newContent);\n      });\n    } // When the module is disposed, remove the <style> tags\n\n\n    module.hot.dispose(function () {\n      update();\n    });\n  }\n  /***/\n\n},\n/* 25 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  exports = module.exports = __webpack_require__(2)(false); // imports\n  // module\n\n  exports.push([module.i, \".SpreadsheetGridContainer {\\n    position: relative;\\n    height: 100%;\\n}\\n\\n.SpreadsheetGridContainer div,\\n.SpreadsheetGridContainer input {\\n    -webkit-box-sizing: border-box;\\n            box-sizing: border-box;\\n}\\n\\n.SpreadsheetGridScrollWrapper {\\n    position: relative;\\n    -webkit-transition: height 0.3s;\\n    transition: height 0.3s;\\n    border-bottom: 1px solid #E6E1E8;\\n}\\n\\n.SpreadsheetGridScrollWrapper_scrollable {\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n}\", \"\"]); // exports\n\n  /***/\n},\n/* 26 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _react = __webpack_require__(1);\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes = __webpack_require__(0);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _keymap = __webpack_require__(4);\n\n  var _keymap2 = _interopRequireDefault(_keymap);\n\n  var _styles = __webpack_require__(27);\n\n  var _styles2 = _interopRequireDefault(_styles);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var SpreadsheetGridInput = function (_React$PureComponent) {\n    _inherits(SpreadsheetGridInput, _React$PureComponent);\n\n    function SpreadsheetGridInput(props) {\n      _classCallCheck(this, SpreadsheetGridInput);\n\n      var _this = _possibleConstructorReturn(this, (SpreadsheetGridInput.__proto__ || Object.getPrototypeOf(SpreadsheetGridInput)).call(this, props));\n\n      _this.onKeyDown = _this.onKeyDown.bind(_this);\n      _this.onChange = _this.onChange.bind(_this);\n      _this.onBlur = _this.onBlur.bind(_this);\n      _this.state = {\n        value: _this.props.value\n      };\n      return _this;\n    }\n\n    _createClass(SpreadsheetGridInput, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this.prepareFocus(this.props.focus);\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(_ref) {\n        var _this2 = this;\n\n        var value = _ref.value,\n            focus = _ref.focus;\n        this.setState({\n          value: value\n        }, function () {\n          _this2.prepareFocus(focus);\n        });\n      }\n    }, {\n      key: 'onKeyDown',\n      value: function onKeyDown(e) {\n        if (e.keyCode === _keymap2.default.ENTER || e.keyCode === _keymap2.default.TAB) {\n          e.preventDefault();\n          this.input.blur();\n        }\n      }\n    }, {\n      key: 'onChange',\n      value: function onChange(e) {\n        var value = e.target.value;\n        this.setState({\n          value: value\n        });\n      }\n    }, {\n      key: 'onBlur',\n      value: function onBlur() {\n        if (this.props.onChange) {\n          this.props.onChange(this.input.value);\n        }\n      }\n    }, {\n      key: 'prepareFocus',\n      value: function prepareFocus(focus) {\n        if (focus) {\n          this.input.focus();\n          this.input.selectionStart = this.input.value.length;\n        } else if (this.input === document.activeElement) {\n          this.input.blur();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2.default.createElement('input', {\n          className: 'SpreadsheetGridInput',\n          value: this.state.value,\n          placeholder: this.props.placeholder,\n          ref: function ref(input) {\n            return _this3.input = input;\n          },\n          onKeyDown: this.onKeyDown,\n          onChange: this.onChange,\n          onBlur: this.onBlur\n        });\n      }\n    }]);\n\n    return SpreadsheetGridInput;\n  }(_react2.default.PureComponent);\n\n  SpreadsheetGridInput.propTypes = {\n    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n    onChange: _propTypes2.default.func,\n    placeholder: _propTypes2.default.string\n  };\n  SpreadsheetGridInput.defaultProps = {\n    value: ''\n  };\n  exports.default = SpreadsheetGridInput;\n  /***/\n},\n/* 27 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  // style-loader: Adds some css to the DOM by adding a <style> tag\n  // load the styles\n  var content = __webpack_require__(28);\n\n  if (typeof content === 'string') content = [[module.i, content, '']]; // Prepare cssTransformation\n\n  var transform;\n  var options = {\n    \"sourceMap\": true,\n    \"hmr\": true\n  };\n  options.transform = transform; // add the styles to the DOM\n\n  var update = __webpack_require__(3)(content, options);\n\n  if (content.locals) module.exports = content.locals; // Hot Module Replacement\n\n  if (false) {\n    // When the styles change, update the <style> tags\n    if (!content.locals) {\n      module.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./styles.css\", function () {\n        var newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./styles.css\");\n\n        if (typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n        update(newContent);\n      });\n    } // When the module is disposed, remove the <style> tags\n\n\n    module.hot.dispose(function () {\n      update();\n    });\n  }\n  /***/\n\n},\n/* 28 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  exports = module.exports = __webpack_require__(2)(false); // imports\n  // module\n\n  exports.push([module.i, \".SpreadsheetGridInput {\\n    height: 100%;\\n    width: 100%;\\n    border: none;\\n    border-radius: 0;\\n    font-size: 13px;\\n    line-height: 15px;\\n    outline: none;\\n    font-family: Arial;\\n    background: transparent;\\n    text-overflow: ellipsis;\\n}\", \"\"]); // exports\n\n  /***/\n},\n/* 29 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _react = __webpack_require__(1);\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes = __webpack_require__(0);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _dropdown = __webpack_require__(30);\n\n  var _dropdown2 = _interopRequireDefault(_dropdown);\n\n  var _keymap = __webpack_require__(4);\n\n  var _keymap2 = _interopRequireDefault(_keymap);\n\n  var _lodash = __webpack_require__(5);\n\n  var _lodash2 = _interopRequireDefault(_lodash);\n\n  var _styles = __webpack_require__(34);\n\n  var _styles2 = _interopRequireDefault(_styles);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var SpreadsheetGridSelect = function (_React$PureComponent) {\n    _inherits(SpreadsheetGridSelect, _React$PureComponent);\n\n    function SpreadsheetGridSelect(props) {\n      _classCallCheck(this, SpreadsheetGridSelect);\n\n      var _this = _possibleConstructorReturn(this, (SpreadsheetGridSelect.__proto__ || Object.getPrototypeOf(SpreadsheetGridSelect)).call(this, props));\n\n      _this.onGlobalKeyDown = _this.onGlobalKeyDown.bind(_this);\n      _this.onItemMouseLeave = _this.onItemMouseLeave.bind(_this);\n      _this.state = {\n        isOpen: _this.props.isOpen,\n        selectedId: _this.props.selectedId\n      };\n      return _this;\n    }\n\n    _createClass(SpreadsheetGridSelect, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        document.addEventListener('keydown', this.onGlobalKeyDown, false);\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        document.removeEventListener('keydown', this.onGlobalKeyDown, false);\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(_ref) {\n        var isOpen = _ref.isOpen,\n            selectedId = _ref.selectedId;\n        this.setState({\n          isOpen: isOpen,\n          selectedId: selectedId\n        });\n      }\n    }, {\n      key: 'onItemClick',\n      value: function onItemClick(selectedId, item) {\n        var _this2 = this;\n\n        this.setState({\n          selectedId: selectedId,\n          isOpen: false\n        }, function () {\n          if (_this2.props.onChange) {\n            _this2.props.onChange(selectedId, item);\n          }\n        });\n      }\n    }, {\n      key: 'onItemMouseEnter',\n      value: function onItemMouseEnter(selectedIndex) {\n        this.setState({\n          selectedIndex: selectedIndex\n        });\n      }\n    }, {\n      key: 'onItemMouseLeave',\n      value: function onItemMouseLeave() {\n        this.setState({\n          selectedIndex: null\n        });\n      }\n    }, {\n      key: 'onGlobalKeyDown',\n      value: function onGlobalKeyDown(e) {\n        if (this.state.isOpen) {\n          if (e.keyCode === _keymap2.default.DOWN) {\n            e.preventDefault();\n\n            if (this.state.selectedIndex || this.state.selectedIndex === 0) {\n              this.setState({\n                selectedIndex: this.state.selectedIndex + 1\n              });\n            } else {\n              this.setState({\n                selectedIndex: 0\n              });\n            }\n\n            if (this.state.selectedIndex > this.props.items.length - 1) {\n              this.setState({\n                selectedIndex: 0\n              });\n            }\n          }\n\n          if (e.keyCode === _keymap2.default.UP) {\n            e.preventDefault();\n\n            if (this.state.selectedIndex || this.state.selectedIndex === 0) {\n              this.setState({\n                selectedIndex: this.state.selectedIndex - 1\n              });\n            } else {\n              this.setState({\n                selectedIndex: this.props.items.length - 1\n              });\n            }\n\n            if (this.state.selectedIndex < 0) {\n              this.setState({\n                selectedIndex: this.props.items.length - 1\n              });\n            }\n          }\n\n          if (e.keyCode === _keymap2.default.ENTER || e.keyCode === _keymap2.default.TAB) {\n            if (this.state.selectedIndex || this.state.selectedIndex === 0) {\n              var selectedItem = this.props.items[this.state.selectedIndex];\n              this.onItemClick(selectedItem.id, selectedItem);\n            }\n          }\n\n          e.preventDefault();\n        }\n      }\n    }, {\n      key: 'getItemClassName',\n      value: function getItemClassName(isSelected) {\n        return 'SpreadsheetGridSelectItem' + (isSelected ? ' SpreadsheetGridSelectItem_selected' : '');\n      }\n    }, {\n      key: 'isHasValue',\n      value: function isHasValue() {\n        return this.state.selectedId && this.props.items;\n      }\n    }, {\n      key: 'getHeaderValue',\n      value: function getHeaderValue() {\n        var value = void 0;\n\n        if (this.isHasValue()) {\n          value = (0, _lodash2.default)(this.props.items, {\n            id: this.state.selectedId\n          });\n          value = value ? value.name : value;\n        } else {\n          value = this.props.placeholder;\n        }\n\n        return value;\n      }\n    }, {\n      key: 'getHeaderClassName',\n      value: function getHeaderClassName() {\n        return 'SpreadsheetGridSelectHeader' + (this.state.isOpen ? ' SpreadsheetGridSelectHeader_open' : '');\n      }\n    }, {\n      key: 'renderHeader',\n      value: function renderHeader() {\n        return _react2.default.createElement('div', {\n          className: this.getHeaderClassName()\n        }, _react2.default.createElement('div', {\n          className: 'SpreadsheetGridSelectValue'\n        }, this.getHeaderValue()));\n      }\n    }, {\n      key: 'renderBody',\n      value: function renderBody() {\n        var _this3 = this;\n\n        var items = this.props.items;\n        return _react2.default.createElement('div', null, items && items.map(function (item, i) {\n          return _react2.default.createElement('div', {\n            key: i,\n            className: _this3.getItemClassName(i === _this3.state.selectedIndex),\n            onClick: _this3.onItemClick.bind(_this3, item.id, item),\n            onMouseEnter: _this3.onItemMouseEnter.bind(_this3, i),\n            onMouseLeave: _this3.onItemMouseLeave\n          }, item.name);\n        }));\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement(_dropdown2.default, {\n          header: this.renderHeader(),\n          body: this.renderBody(),\n          isOpen: this.state.isOpen\n        });\n      }\n    }]);\n\n    return SpreadsheetGridSelect;\n  }(_react2.default.PureComponent);\n\n  var IdPropType = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]);\n\n  SpreadsheetGridSelect.propTypes = {\n    selectedId: IdPropType,\n    items: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n      id: IdPropType,\n      value: _propTypes2.default.string\n    })),\n    onChange: _propTypes2.default.func,\n    placeholder: _propTypes2.default.string,\n    isOpen: _propTypes2.default.bool\n  };\n  SpreadsheetGridSelect.defaultProps = {\n    items: [],\n    placeholder: '',\n    isOpen: false\n  };\n  exports.default = SpreadsheetGridSelect;\n  /***/\n},\n/* 30 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _react = __webpack_require__(1);\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _reactDom = __webpack_require__(31);\n\n  var _propTypes = __webpack_require__(0);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _styles = __webpack_require__(32);\n\n  var _styles2 = _interopRequireDefault(_styles);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var SpreadsheetGridDropdown = function (_React$PureComponent) {\n    _inherits(SpreadsheetGridDropdown, _React$PureComponent);\n\n    function SpreadsheetGridDropdown(props) {\n      _classCallCheck(this, SpreadsheetGridDropdown);\n\n      var _this = _possibleConstructorReturn(this, (SpreadsheetGridDropdown.__proto__ || Object.getPrototypeOf(SpreadsheetGridDropdown)).call(this, props));\n\n      _this.onHeaderClick = _this.onHeaderClick.bind(_this);\n      _this.onGlobalClick = _this.onGlobalClick.bind(_this);\n      _this.skipGlobalClick = false;\n      _this.state = {\n        isOpen: _this.props.isOpen\n      };\n      return _this;\n    }\n\n    _createClass(SpreadsheetGridDropdown, [{\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(_ref) {\n        var isOpen = _ref.isOpen;\n\n        if (isOpen !== undefined) {\n          this.setState({\n            isOpen: isOpen\n          });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        document.removeEventListener('click', this.onGlobalClick, false);\n      }\n    }, {\n      key: 'onGlobalClick',\n      value: function onGlobalClick(event) {\n        var dropdownElement = (0, _reactDom.findDOMNode)(this);\n\n        if (!this.skipGlobalClick && !event.skipDropdownGlobalClick) {\n          if (event.target !== dropdownElement && !dropdownElement.contains(event.target)) {\n            this.close();\n          }\n        } else {\n          this.skipGlobalClick = false;\n        }\n      }\n    }, {\n      key: 'onHeaderClick',\n      value: function onHeaderClick() {\n        if (this.state.isOpen) {\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n    }, {\n      key: 'open',\n      value: function open() {\n        this.setState({\n          isOpen: true\n        });\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        this.setState({\n          isOpen: false\n        });\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        return _react2.default.createElement('div', {\n          className: 'SpreadsheetGridDropdown'\n        }, _react2.default.cloneElement(this.props.header, {\n          onClick: this.onHeaderClick\n        }), _react2.default.createElement('div', {\n          ref: function ref(node) {\n            return _this2.body = node;\n          },\n          className: 'SpreadsheetGridDropdown__body',\n          style: {\n            display: this.state.isOpen ? 'block' : 'none'\n          }\n        }, this.props.body));\n      }\n    }]);\n\n    return SpreadsheetGridDropdown;\n  }(_react2.default.PureComponent);\n\n  SpreadsheetGridDropdown.propTypes = {\n    header: _propTypes2.default.element.isRequired,\n    body: _propTypes2.default.oneOfType([_propTypes2.default.element.isRequired, _propTypes2.default.arrayOf(_propTypes2.default.element).isRequired]),\n    isOpen: _propTypes2.default.bool\n  };\n  SpreadsheetGridDropdown.defaultProps = {\n    isOpen: false\n  };\n  exports.default = SpreadsheetGridDropdown;\n  /***/\n},\n/* 31 */\n\n/***/\nfunction (module, exports) {\n  module.exports = require(\"react-dom\");\n  /***/\n},\n/* 32 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  // style-loader: Adds some css to the DOM by adding a <style> tag\n  // load the styles\n  var content = __webpack_require__(33);\n\n  if (typeof content === 'string') content = [[module.i, content, '']]; // Prepare cssTransformation\n\n  var transform;\n  var options = {\n    \"sourceMap\": true,\n    \"hmr\": true\n  };\n  options.transform = transform; // add the styles to the DOM\n\n  var update = __webpack_require__(3)(content, options);\n\n  if (content.locals) module.exports = content.locals; // Hot Module Replacement\n\n  if (false) {\n    // When the styles change, update the <style> tags\n    if (!content.locals) {\n      module.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./styles.css\", function () {\n        var newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./styles.css\");\n\n        if (typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n        update(newContent);\n      });\n    } // When the module is disposed, remove the <style> tags\n\n\n    module.hot.dispose(function () {\n      update();\n    });\n  }\n  /***/\n\n},\n/* 33 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  exports = module.exports = __webpack_require__(2)(false); // imports\n  // module\n\n  exports.push([module.i, \".SpreadsheetGridDropdown {\\n  display: inline-block;\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\ndiv.SpreadsheetGridDropdown__body {\\n  position: absolute;\\n  top: calc(100% + 12px);\\n  left: -10px;\\n  z-index: 100;\\n  background: white;\\n  -webkit-box-shadow: 0 10px 40px 0 rgba(0,0,0,0.15);\\n          box-shadow: 0 10px 40px 0 rgba(0,0,0,0.15);\\n  border-radius: 5px;\\n  font-size: 13px;\\n  letter-spacing: 0.5px;\\n  padding: 8px;\\n  max-height: 200px;\\n  overflow-y: auto;\\n  min-width: calc(100% + 2px);\\n  font-family: Arial;\\n}\\n\\ndiv.SpreadsheetGridDropdown__body {\\n  -webkit-box-sizing: content-box;\\n          box-sizing: content-box;\\n}\", \"\"]); // exports\n\n  /***/\n},\n/* 34 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  // style-loader: Adds some css to the DOM by adding a <style> tag\n  // load the styles\n  var content = __webpack_require__(35);\n\n  if (typeof content === 'string') content = [[module.i, content, '']]; // Prepare cssTransformation\n\n  var transform;\n  var options = {\n    \"sourceMap\": true,\n    \"hmr\": true\n  };\n  options.transform = transform; // add the styles to the DOM\n\n  var update = __webpack_require__(3)(content, options);\n\n  if (content.locals) module.exports = content.locals; // Hot Module Replacement\n\n  if (false) {\n    // When the styles change, update the <style> tags\n    if (!content.locals) {\n      module.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./styles.css\", function () {\n        var newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./styles.css\");\n\n        if (typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n        update(newContent);\n      });\n    } // When the module is disposed, remove the <style> tags\n\n\n    module.hot.dispose(function () {\n      update();\n    });\n  }\n  /***/\n\n},\n/* 35 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  exports = module.exports = __webpack_require__(2)(false); // imports\n  // module\n\n  exports.push([module.i, \".SpreadsheetGridSelectHeader {\\n    position: relative;\\n    font-size: 13px;\\n    line-height: 15px;\\n    font-family: Arial;\\n    color: #000;\\n    vertical-align: middle;\\n    height: 100%;\\n    display: -webkit-box;\\n    display: -webkit-flex;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-align: center;\\n    -webkit-align-items: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n}\\n\\n.SpreadsheetGridSelectValue {\\n    width: calc(100% - 20px);\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n}\\n\\n.SpreadsheetGridSelectHeader:after {\\n    position: absolute;\\n    content: \\\"\\\";\\n    width: 0;\\n    height: 0;\\n    border-left: 6px solid transparent;\\n    border-right: 6px solid transparent;\\n    border-top: 6px solid #000;\\n    top: calc(50% - 3px);\\n    right: 5px;\\n}\\n\\n.SpreadsheetGridSelectHeader_open:after {\\n    border-top-color: #ff5d00;\\n}\\n\\n.SpreadsheetGridSelectItem {\\n    font-weight: 400;\\n    font-size: 14px;\\n    padding: 7px 14px;\\n    cursor: pointer;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n}\\n\\n.SpreadsheetGridSelectItem_selected {\\n    background-color: #F0EEF3;\\n    color: #ff5d00;\\n    border-radius: 3px;\\n}\", \"\"]); // exports\n\n  /***/\n}]);","map":null,"metadata":{},"sourceType":"script"}